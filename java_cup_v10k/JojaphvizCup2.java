
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Fri Jul 04 20:05:15 CST 2014
//----------------------------------------------------

package analisis;

import java_cup.runtime.*;
import java.util.*;
import acciones.tablasimbolos.*;

/** CUP v0.10k generated parser.
  * @version Fri Jul 04 20:05:15 CST 2014
  */
public class JojaphvizCup2 extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public JojaphvizCup2() {super();}

  /** Constructor which sets the default scanner. */
  public JojaphvizCup2(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\262\000\002\002\004\000\002\003\003\000\002\004" +
    "\004\000\002\005\012\000\002\005\004\000\002\005\002" +
    "\000\002\100\002\000\002\006\013\000\002\070\004\000" +
    "\002\070\002\000\002\036\004\000\002\036\002\000\002" +
    "\010\003\000\002\010\003\000\002\010\002\000\002\007" +
    "\005\000\002\007\004\000\002\007\004\000\002\007\004" +
    "\000\002\007\003\000\002\011\004\000\002\072\006\000" +
    "\002\072\005\000\002\073\004\000\002\073\002\000\002" +
    "\023\003\000\002\012\006\000\002\012\005\000\002\013" +
    "\004\000\002\013\002\000\002\101\002\000\002\026\014" +
    "\000\002\102\002\000\002\071\013\000\002\055\004\000" +
    "\002\027\003\000\002\027\002\000\002\024\006\000\002" +
    "\024\007\000\002\024\004\000\002\024\005\000\002\025" +
    "\004\000\002\025\003\000\002\067\004\000\002\067\004" +
    "\000\002\067\004\000\002\067\004\000\002\067\004\000" +
    "\002\067\004\000\002\067\004\000\002\067\004\000\002" +
    "\067\004\000\002\067\004\000\002\067\004\000\002\067" +
    "\004\000\002\067\003\000\002\067\003\000\002\067\003" +
    "\000\002\067\003\000\002\067\003\000\002\067\004\000" +
    "\002\067\004\000\002\067\003\000\002\044\005\000\002" +
    "\044\005\000\002\044\005\000\002\044\005\000\002\044" +
    "\005\000\002\044\003\000\002\044\003\000\002\020\004" +
    "\000\002\020\004\000\002\020\004\000\002\020\004\000" +
    "\002\056\011\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\006\000\002\022\003\000\002\022" +
    "\003\000\002\022\003\000\002\022\003\000\002\022\003" +
    "\000\002\015\003\000\002\016\005\000\002\016\005\000" +
    "\002\016\005\000\002\016\005\000\002\016\005\000\002" +
    "\016\005\000\002\016\003\000\002\017\003\000\002\017" +
    "\003\000\002\017\003\000\002\017\003\000\002\017\003" +
    "\000\002\017\003\000\002\017\003\000\002\017\003\000" +
    "\002\017\003\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\050\007\000\002\075\005\000\002\075" +
    "\003\000\002\051\007\000\002\103\002\000\002\030\005" +
    "\000\002\104\002\000\002\030\005\000\002\030\003\000" +
    "\002\030\003\000\002\030\003\000\002\031\004\000\002" +
    "\105\002\000\002\074\005\000\002\074\003\000\002\074" +
    "\003\000\002\074\003\000\002\033\006\000\002\077\006" +
    "\000\002\021\006\000\002\035\003\000\002\035\002\000" +
    "\002\034\005\000\002\034\003\000\002\032\006\000\002" +
    "\032\006\000\002\076\006\000\002\076\006\000\002\106" +
    "\002\000\002\045\016\000\002\107\002\000\002\045\021" +
    "\000\002\110\002\000\002\046\012\000\002\111\002\000" +
    "\002\112\002\000\002\047\014\000\002\052\006\000\002" +
    "\113\002\000\002\053\010\000\002\114\002\000\002\053" +
    "\014\000\002\115\002\000\002\054\007\000\002\054\002" +
    "\000\002\116\002\000\002\117\002\000\002\037\014\000" +
    "\002\120\002\000\002\040\007\000\002\121\002\000\002" +
    "\122\002\000\002\040\015\000\002\040\002\000\002\041" +
    "\005\000\002\041\005\000\002\041\004\000\002\041\005" +
    "\000\002\041\003\000\002\042\005\000\002\043\003\000" +
    "\002\043\003\000\002\043\003\000\002\043\003\000\002" +
    "\043\003\000\002\043\003\000\002\057\006\000\002\060" +
    "\006\000\002\061\006\000\002\062\006\000\002\063\006" +
    "\000\002\064\006\000\002\065\006\000\002\066\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u017b\000\014\004\ufffc\007\ufffc\010\ufffc\011\ufffc\012" +
    "\ufffc\001\002\000\004\002\u017d\001\002\000\014\004\007" +
    "\007\011\010\013\011\010\012\ufff3\001\002\000\004\002" +
    "\000\001\002\000\004\046\u0177\001\002\000\024\005\ufff4" +
    "\012\ufff4\017\ufff4\020\ufff4\021\ufff4\022\ufff4\023\ufff4\024" +
    "\ufff4\045\ufff4\001\002\000\014\004\ufffd\007\ufffd\010\ufffd" +
    "\011\ufffd\012\ufffd\001\002\000\004\002\uffff\001\002\000" +
    "\024\005\ufff5\012\ufff5\017\ufff5\020\ufff5\021\ufff5\022\ufff5" +
    "\023\ufff5\024\ufff5\045\ufff5\001\002\000\004\012\015\001" +
    "\002\000\004\005\016\001\002\000\006\013\ufffb\053\ufffb" +
    "\001\002\000\006\013\ufff6\053\021\001\002\000\004\013" +
    "\023\001\002\000\004\005\022\001\002\000\004\013\ufff7" +
    "\001\002\000\004\007\025\001\002\000\032\005\ufff3\007" +
    "\027\010\013\011\010\014\026\017\ufff3\020\ufff3\021\ufff3" +
    "\022\ufff3\023\ufff3\024\ufff3\045\ufff3\001\002\000\032\005" +
    "\uffee\007\uffee\010\uffee\011\uffee\014\uffee\017\uffee\020\uffee" +
    "\021\uffee\022\uffee\023\uffee\024\uffee\045\uffee\001\002\000" +
    "\006\002\ufff8\007\ufff8\001\002\000\032\005\uffef\007\uffef" +
    "\010\uffef\011\uffef\014\uffef\017\uffef\020\uffef\021\uffef\022" +
    "\uffef\023\uffef\024\uffef\045\uffef\001\002\000\032\005\ufff1" +
    "\007\ufff1\010\ufff1\011\ufff1\014\ufff1\017\ufff1\020\ufff1\021" +
    "\ufff1\022\ufff1\023\ufff1\024\ufff1\045\ufff1\001\002\000\022" +
    "\005\042\017\040\020\036\021\044\022\047\023\046\024" +
    "\043\045\035\001\002\000\032\005\ufff0\007\ufff0\010\ufff0" +
    "\011\ufff0\014\ufff0\017\ufff0\020\ufff0\021\ufff0\022\ufff0\023" +
    "\ufff0\024\ufff0\045\ufff0\001\002\000\004\007\034\001\002" +
    "\000\032\005\ufff2\007\ufff2\010\ufff2\011\ufff2\014\ufff2\017" +
    "\ufff2\020\ufff2\021\ufff2\022\ufff2\023\ufff2\024\ufff2\045\ufff2" +
    "\001\002\000\004\046\u0172\001\002\000\010\005\uffb1\033" +
    "\uffb1\047\uffb1\001\002\000\006\005\uffb6\047\uffb6\001\002" +
    "\000\010\005\uffb2\033\uffb2\047\uffb2\001\002\000\006\007" +
    "\uffed\016\u016f\001\002\000\006\005\uffb5\032\u0168\001\002" +
    "\000\010\005\uffae\033\uffae\047\uffae\001\002\000\006\005" +
    "\uffb4\047\uffb4\001\002\000\004\005\050\001\002\000\010" +
    "\005\uffaf\033\uffaf\047\uffaf\001\002\000\010\005\uffb0\033" +
    "\uffb0\047\uffb0\001\002\000\012\007\uffe9\015\051\016\uffe9" +
    "\032\052\001\002\000\032\005\170\032\204\034\161\035" +
    "\154\036\171\037\173\040\172\041\164\042\141\043\076" +
    "\050\113\070\200\001\002\000\026\005\057\017\040\020" +
    "\036\021\044\022\047\023\046\024\043\033\uffdd\044\054" +
    "\045\035\001\002\000\006\007\uffeb\016\uffeb\001\002\000" +
    "\022\005\057\017\040\020\036\021\044\022\047\023\046" +
    "\024\043\045\035\001\002\000\004\033\070\001\002\000" +
    "\006\016\062\033\uffde\001\002\000\006\005\uffb5\047\uffb5" +
    "\001\002\000\004\005\061\001\002\000\006\016\uffda\033" +
    "\uffda\001\002\000\024\005\057\017\040\020\036\021\044" +
    "\022\047\023\046\024\043\044\063\045\035\001\002\000" +
    "\022\005\057\017\040\020\036\021\044\022\047\023\046" +
    "\024\043\045\035\001\002\000\004\005\065\001\002\000" +
    "\006\016\uffdc\033\uffdc\001\002\000\004\005\067\001\002" +
    "\000\006\016\uffdb\033\uffdb\001\002\000\004\013\uffe3\001" +
    "\002\000\004\013\072\001\002\000\004\007\074\001\002" +
    "\000\076\005\135\007\146\014\107\017\040\020\036\021" +
    "\044\022\047\023\046\024\043\032\153\042\141\043\076" +
    "\045\035\050\113\054\105\065\115\066\124\067\144\071" +
    "\114\072\130\073\112\103\103\104\136\105\134\106\116" +
    "\107\137\110\110\111\147\112\077\113\127\001\002\000" +
    "\102\005\uffd7\007\uffd7\014\uffd7\017\uffd7\020\uffd7\021\uffd7" +
    "\022\uffd7\023\uffd7\024\uffd7\032\uffd7\042\uffd7\043\uffd7\045" +
    "\uffd7\050\uffd7\054\uffd7\065\uffd7\066\uffd7\067\uffd7\071\uffd7" +
    "\072\uffd7\073\uffd7\074\uffd7\075\uffd7\103\uffd7\104\uffd7\105" +
    "\uffd7\106\uffd7\107\uffd7\110\uffd7\111\uffd7\112\uffd7\113\uffd7" +
    "\001\002\000\004\007\u0164\001\002\000\006\005\170\050" +
    "\113\001\002\000\004\032\u0160\001\002\000\004\005\u015e" +
    "\001\002\000\004\007\u015d\001\002\000\064\007\uff90\015" +
    "\uff90\016\uff90\025\uff90\026\uff90\027\uff90\030\uff90\031\uff90" +
    "\033\uff90\042\uff90\043\uff90\046\uff90\047\uff90\052\uff90\056" +
    "\uff90\057\uff90\061\uff90\062\uff90\063\uff90\064\uff90\076\uff90" +
    "\077\uff90\100\uff90\101\uff90\102\uff90\001\002\000\032\005" +
    "\170\032\204\034\161\035\154\036\171\037\173\040\172" +
    "\041\164\042\141\043\076\050\113\070\200\001\002\000" +
    "\006\007\uffe8\016\u0157\001\002\000\004\032\u013f\001\002" +
    "\000\102\005\uffc9\007\uffc9\014\uffc9\017\uffc9\020\uffc9\021" +
    "\uffc9\022\uffc9\023\uffc9\024\uffc9\032\uffc9\042\uffc9\043\uffc9" +
    "\045\uffc9\050\uffc9\054\uffc9\065\uffc9\066\uffc9\067\uffc9\071" +
    "\uffc9\072\uffc9\073\uffc9\074\uffc9\075\uffc9\103\uffc9\104\uffc9" +
    "\105\uffc9\106\uffc9\107\uffc9\110\uffc9\111\uffc9\112\uffc9\113" +
    "\uffc9\001\002\000\032\005\uffe2\007\uffe2\010\uffe2\011\uffe2" +
    "\014\uffe2\017\uffe2\020\uffe2\021\uffe2\022\uffe2\023\uffe2\024" +
    "\uffe2\045\uffe2\001\002\000\004\032\u013c\001\002\000\004" +
    "\007\u013b\001\002\000\004\032\u0124\001\002\000\004\006" +
    "\uff95\001\002\000\004\007\u0121\001\002\000\004\032\u0108" +
    "\001\002\000\004\032\u0105\001\002\000\004\007\u0104\001" +
    "\002\000\010\007\uffbd\016\uffbd\033\uffbd\001\002\000\102" +
    "\005\uffca\007\uffca\014\uffca\017\uffca\020\uffca\021\uffca\022" +
    "\uffca\023\uffca\024\uffca\032\uffca\042\uffca\043\uffca\045\uffca" +
    "\050\uffca\054\uffca\065\uffca\066\uffca\067\uffca\071\uffca\072" +
    "\uffca\073\uffca\074\uffca\075\uffca\103\uffca\104\uffca\105\uffca" +
    "\106\uffca\107\uffca\110\uffca\111\uffca\112\uffca\113\uffca\001" +
    "\002\000\004\007\u0103\001\002\000\004\007\u0102\001\002" +
    "\000\004\032\373\001\002\000\004\007\372\001\002\000" +
    "\102\005\uffd8\007\uffd8\014\uffd8\017\uffd8\020\uffd8\021\uffd8" +
    "\022\uffd8\023\uffd8\024\uffd8\032\uffd8\042\uffd8\043\uffd8\045" +
    "\uffd8\050\uffd8\054\uffd8\065\uffd8\066\uffd8\067\uffd8\071\uffd8" +
    "\072\uffd8\073\uffd8\074\uffd8\075\uffd8\103\uffd8\104\uffd8\105" +
    "\uffd8\106\uffd8\107\uffd8\110\uffd8\111\uffd8\112\uffd8\113\uffd8" +
    "\001\002\000\004\032\367\001\002\000\004\007\366\001" +
    "\002\000\066\007\uff91\015\uff91\016\uff91\025\uff91\026\uff91" +
    "\027\uff91\030\uff91\031\uff91\033\uff91\042\uff91\043\uff91\046" +
    "\uff91\047\uff91\051\363\052\uff91\056\uff91\057\uff91\061\uff91" +
    "\062\uff91\063\uff91\064\uff91\076\uff91\077\uff91\100\uff91\101" +
    "\uff91\102\uff91\001\002\000\102\005\uffc7\007\uffc7\014\uffc7" +
    "\017\uffc7\020\uffc7\021\uffc7\022\uffc7\023\uffc7\024\uffc7\032" +
    "\uffc7\042\uffc7\043\uffc7\045\uffc7\050\uffc7\054\uffc7\065\uffc7" +
    "\066\uffc7\067\uffc7\071\uffc7\072\uffc7\073\uffc7\074\uffc7\075" +
    "\uffc7\103\uffc7\104\uffc7\105\uffc7\106\uffc7\107\uffc7\110\uffc7" +
    "\111\uffc7\112\uffc7\113\uffc7\001\002\000\004\007\362\001" +
    "\002\000\004\032\357\001\002\000\032\005\uffb5\006\uff93" +
    "\007\uff8f\015\uff8f\032\250\042\uff8f\043\uff8f\051\251\077" +
    "\uff8f\100\uff8f\101\uff8f\102\uff8f\001\002\000\004\032\354" +
    "\001\002\000\004\032\351\001\002\000\102\005\uffc6\007" +
    "\uffc6\014\uffc6\017\uffc6\020\uffc6\021\uffc6\022\uffc6\023\uffc6" +
    "\024\uffc6\032\uffc6\042\uffc6\043\uffc6\045\uffc6\050\uffc6\054" +
    "\uffc6\065\uffc6\066\uffc6\067\uffc6\071\uffc6\072\uffc6\073\uffc6" +
    "\074\uffc6\075\uffc6\103\uffc6\104\uffc6\105\uffc6\106\uffc6\107" +
    "\uffc6\110\uffc6\111\uffc6\112\uffc6\113\uffc6\001\002\000\006" +
    "\005\170\050\113\001\002\000\022\007\340\015\335\042" +
    "\311\043\312\077\336\100\342\101\341\102\337\001\002" +
    "\000\004\007\334\001\002\000\004\013\323\001\002\000" +
    "\102\005\uffc8\007\uffc8\014\uffc8\017\uffc8\020\uffc8\021\uffc8" +
    "\022\uffc8\023\uffc8\024\uffc8\032\uffc8\042\uffc8\043\uffc8\045" +
    "\uffc8\050\uffc8\054\uffc8\065\uffc8\066\uffc8\067\uffc8\071\uffc8" +
    "\072\uffc8\073\uffc8\074\uffc8\075\uffc8\103\uffc8\104\uffc8\105" +
    "\uffc8\106\uffc8\107\uffc8\110\uffc8\111\uffc8\112\uffc8\113\uffc8" +
    "\001\002\000\102\005\uffc3\007\uffc3\014\uffc3\017\uffc3\020" +
    "\uffc3\021\uffc3\022\uffc3\023\uffc3\024\uffc3\032\uffc3\042\uffc3" +
    "\043\uffc3\045\uffc3\050\uffc3\054\uffc3\065\uffc3\066\uffc3\067" +
    "\uffc3\071\uffc3\072\uffc3\073\uffc3\074\uffc3\075\uffc3\103\uffc3" +
    "\104\uffc3\105\uffc3\106\uffc3\107\uffc3\110\uffc3\111\uffc3\112" +
    "\uffc3\113\uffc3\001\002\000\004\032\320\001\002\000\010" +
    "\007\uffbc\016\uffbc\033\uffbc\001\002\000\004\007\317\001" +
    "\002\000\004\007\316\001\002\000\034\005\170\032\156" +
    "\034\161\035\154\036\171\037\173\040\172\041\164\042" +
    "\141\043\076\050\113\060\157\070\200\001\002\000\046" +
    "\007\uffa4\016\uffa4\025\uffa4\026\uffa4\027\uffa4\030\uffa4\031" +
    "\uffa4\033\uffa4\046\uffa4\047\uffa4\052\uffa4\056\uffa4\057\uffa4" +
    "\061\uffa4\062\uffa4\063\uffa4\064\uffa4\076\uffa4\001\002\000" +
    "\046\007\uff9a\016\uff9a\025\uff9a\026\uff9a\027\uff9a\030\uff9a" +
    "\031\uff9a\033\uff9a\046\uff9a\047\uff9a\052\uff9a\056\uff9a\057" +
    "\uff9a\061\uff9a\062\uff9a\063\uff9a\064\uff9a\076\uff9a\001\002" +
    "\000\046\005\170\017\040\020\036\022\047\023\046\024" +
    "\043\032\156\034\161\035\154\036\171\037\173\040\172" +
    "\041\164\042\141\043\076\050\113\060\157\070\200\001" +
    "\002\000\034\005\170\032\156\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\060" +
    "\157\070\200\001\002\000\046\007\uff9e\016\uff9e\025\uff9e" +
    "\026\uff9e\027\uff9e\030\uff9e\031\uff9e\033\uff9e\046\uff9e\047" +
    "\uff9e\052\uff9e\056\uff9e\057\uff9e\061\uff9e\062\uff9e\063\uff9e" +
    "\064\uff9e\076\uff9e\001\002\000\046\007\uffa5\016\uffa5\025" +
    "\uffa5\026\uffa5\027\uffa5\030\uffa5\031\uffa5\033\uffa5\046\uffa5" +
    "\047\uffa5\052\uffa5\056\uffa5\057\uffa5\061\uffa5\062\uffa5\063" +
    "\uffa5\064\uffa5\076\uffa5\001\002\000\052\007\uff9f\016\uff9f" +
    "\025\uff9f\026\uff9f\027\uff9f\030\uff9f\031\uff9f\033\uff9f\042" +
    "\311\043\312\046\uff9f\047\uff9f\052\uff9f\056\uff9f\057\uff9f" +
    "\061\uff9f\062\uff9f\063\uff9f\064\uff9f\076\uff9f\001\002\000" +
    "\046\007\uff9c\016\uff9c\025\uff9c\026\uff9c\027\uff9c\030\uff9c" +
    "\031\uff9c\033\uff9c\046\uff9c\047\uff9c\052\uff9c\056\uff9c\057" +
    "\uff9c\061\uff9c\062\uff9c\063\uff9c\064\uff9c\076\uff9c\001\002" +
    "\000\046\007\uffa0\016\uffa0\025\uffa0\026\uffa0\027\uffa0\030" +
    "\uffa0\031\uffa0\033\uffa0\046\uffa0\047\uffa0\052\uffa0\056\uffa0" +
    "\057\uffa0\061\uffa0\062\uffa0\063\uffa0\064\uffa0\076\uffa0\001" +
    "\002\000\046\007\uffad\016\uffad\025\221\026\215\027\220" +
    "\030\216\031\217\033\uffad\046\uffad\047\uffad\052\uffad\056" +
    "\uffad\057\uffad\061\uffad\062\uffad\063\uffad\064\uffad\076\uffad" +
    "\001\002\000\046\007\uffa6\016\uffa6\025\uffa6\026\uffa6\027" +
    "\uffa6\030\uffa6\031\uffa6\033\uffa6\046\uffa6\047\uffa6\052\uffa6" +
    "\056\uffa6\057\uffa6\061\uffa6\062\uffa6\063\uffa6\064\uffa6\076" +
    "\uffa6\001\002\000\010\033\300\056\301\057\302\001\002" +
    "\000\072\006\uff93\007\uff8f\015\uff8f\016\uff8f\025\uff8f\026" +
    "\uff8f\027\uff8f\030\uff8f\031\uff8f\032\250\033\uff8f\042\uff8f" +
    "\043\uff8f\046\uff8f\047\uff8f\051\251\052\uff8f\056\uff8f\057" +
    "\uff8f\061\uff8f\062\uff8f\063\uff8f\064\uff8f\076\uff8f\077\uff8f" +
    "\100\uff8f\101\uff8f\102\uff8f\001\002\000\046\007\uffa3\016" +
    "\uffa3\025\uffa3\026\uffa3\027\uffa3\030\uffa3\031\uffa3\033\uffa3" +
    "\046\uffa3\047\uffa3\052\uffa3\056\uffa3\057\uffa3\061\uffa3\062" +
    "\uffa3\063\uffa3\064\uffa3\076\uffa3\001\002\000\046\007\uffa1" +
    "\016\uffa1\025\uffa1\026\uffa1\027\uffa1\030\uffa1\031\uffa1\033" +
    "\uffa1\046\uffa1\047\uffa1\052\uffa1\056\uffa1\057\uffa1\061\uffa1" +
    "\062\uffa1\063\uffa1\064\uffa1\076\uffa1\001\002\000\046\007" +
    "\uffa2\016\uffa2\025\uffa2\026\uffa2\027\uffa2\030\uffa2\031\uffa2" +
    "\033\uffa2\046\uffa2\047\uffa2\052\uffa2\056\uffa2\057\uffa2\061" +
    "\uffa2\062\uffa2\063\uffa2\064\uffa2\076\uffa2\001\002\000\046" +
    "\007\uff9d\016\uff9d\025\uff9d\026\uff9d\027\uff9d\030\uff9d\031" +
    "\uff9d\033\uff9d\046\uff9d\047\uff9d\052\uff9d\056\uff9d\057\uff9d" +
    "\061\uff9d\062\uff9d\063\uff9d\064\uff9d\076\uff9d\001\002\000" +
    "\046\007\uff9b\016\uff9b\025\uff9b\026\uff9b\027\uff9b\030\uff9b" +
    "\031\uff9b\033\uff9b\046\uff9b\047\uff9b\052\uff9b\056\uff9b\057" +
    "\uff9b\061\uff9b\062\uff9b\063\uff9b\064\uff9b\076\uff9b\001\002" +
    "\000\012\016\uff5f\033\uff5f\056\uff5f\057\uff5f\001\002\000" +
    "\016\046\242\047\243\061\246\062\245\063\240\064\244" +
    "\001\002\000\006\005\201\045\202\001\002\000\004\032" +
    "\231\001\002\000\004\032\203\001\002\000\032\005\170" +
    "\032\204\034\161\035\154\036\171\037\173\040\172\041" +
    "\164\042\141\043\076\050\113\070\200\001\002\000\046" +
    "\005\170\017\040\020\036\022\047\023\046\024\043\032" +
    "\156\034\161\035\154\036\171\037\173\040\172\041\164" +
    "\042\141\043\076\050\113\060\157\070\200\001\002\000" +
    "\006\016\210\033\207\001\002\000\006\016\uff97\033\uff97" +
    "\001\002\000\046\007\uff99\016\uff99\025\uff99\026\uff99\027" +
    "\uff99\030\uff99\031\uff99\033\uff99\046\uff99\047\uff99\052\uff99" +
    "\056\uff99\057\uff99\061\uff99\062\uff99\063\uff99\064\uff99\076" +
    "\uff99\001\002\000\032\005\170\032\204\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\070\200\001\002\000\006\016\uff98\033\uff98\001\002" +
    "\000\004\033\227\001\002\000\032\025\221\026\215\027" +
    "\220\030\216\031\217\033\214\046\uffad\047\uffad\061\uffad" +
    "\062\uffad\063\uffad\064\uffad\001\002\000\046\007\uffa7\016" +
    "\uffa7\025\uffa7\026\uffa7\027\uffa7\030\uffa7\031\uffa7\033\uffa7" +
    "\046\uffa7\047\uffa7\052\uffa7\056\uffa7\057\uffa7\061\uffa7\062" +
    "\uffa7\063\uffa7\064\uffa7\076\uffa7\001\002\000\032\005\170" +
    "\032\204\034\161\035\154\036\171\037\173\040\172\041" +
    "\164\042\141\043\076\050\113\070\200\001\002\000\032" +
    "\005\170\032\204\034\161\035\154\036\171\037\173\040" +
    "\172\041\164\042\141\043\076\050\113\070\200\001\002" +
    "\000\032\005\170\032\204\034\161\035\154\036\171\037" +
    "\173\040\172\041\164\042\141\043\076\050\113\070\200" +
    "\001\002\000\032\005\170\032\204\034\161\035\154\036" +
    "\171\037\173\040\172\041\164\042\141\043\076\050\113" +
    "\070\200\001\002\000\032\005\170\032\204\034\161\035" +
    "\154\036\171\037\173\040\172\041\164\042\141\043\076" +
    "\050\113\070\200\001\002\000\046\007\uffac\016\uffac\025" +
    "\uffac\026\uffac\027\220\030\216\031\217\033\uffac\046\uffac" +
    "\047\uffac\052\uffac\056\uffac\057\uffac\061\uffac\062\uffac\063" +
    "\uffac\064\uffac\076\uffac\001\002\000\046\007\uffaa\016\uffaa" +
    "\025\uffaa\026\uffaa\027\uffaa\030\uffaa\031\217\033\uffaa\046" +
    "\uffaa\047\uffaa\052\uffaa\056\uffaa\057\uffaa\061\uffaa\062\uffaa" +
    "\063\uffaa\064\uffaa\076\uffaa\001\002\000\046\007\uffa8\016" +
    "\uffa8\025\uffa8\026\uffa8\027\uffa8\030\uffa8\031\uffa8\033\uffa8" +
    "\046\uffa8\047\uffa8\052\uffa8\056\uffa8\057\uffa8\061\uffa8\062" +
    "\uffa8\063\uffa8\064\uffa8\076\uffa8\001\002\000\046\007\uffa9" +
    "\016\uffa9\025\uffa9\026\uffa9\027\uffa9\030\uffa9\031\217\033" +
    "\uffa9\046\uffa9\047\uffa9\052\uffa9\056\uffa9\057\uffa9\061\uffa9" +
    "\062\uffa9\063\uffa9\064\uffa9\076\uffa9\001\002\000\046\007" +
    "\uffab\016\uffab\025\uffab\026\uffab\027\220\030\216\031\217" +
    "\033\uffab\046\uffab\047\uffab\052\uffab\056\uffab\057\uffab\061" +
    "\uffab\062\uffab\063\uffab\064\uffab\076\uffab\001\002\000\032" +
    "\005\170\032\204\034\161\035\154\036\171\037\173\040" +
    "\172\041\164\042\141\043\076\050\113\070\200\001\002" +
    "\000\046\007\uff86\016\uff86\025\uff86\026\uff86\027\uff86\030" +
    "\uff86\031\uff86\033\uff86\046\uff86\047\uff86\052\uff86\056\uff86" +
    "\057\uff86\061\uff86\062\uff86\063\uff86\064\uff86\076\uff86\001" +
    "\002\000\034\005\170\032\204\033\uff84\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\070\200\001\002\000\004\033\237\001\002\000\006" +
    "\016\235\033\uff85\001\002\000\006\016\uff82\033\uff82\001" +
    "\002\000\032\005\170\032\204\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\070" +
    "\200\001\002\000\006\016\uff83\033\uff83\001\002\000\046" +
    "\007\uff96\016\uff96\025\uff96\026\uff96\027\uff96\030\uff96\031" +
    "\uff96\033\uff96\046\uff96\047\uff96\052\uff96\056\uff96\057\uff96" +
    "\061\uff96\062\uff96\063\uff96\064\uff96\076\uff96\001\002\000" +
    "\032\005\uff59\032\uff59\034\uff59\035\uff59\036\uff59\037\uff59" +
    "\040\uff59\041\uff59\042\uff59\043\uff59\050\uff59\070\uff59\001" +
    "\002\000\032\005\170\032\204\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\070" +
    "\200\001\002\000\032\005\uff5d\032\uff5d\034\uff5d\035\uff5d" +
    "\036\uff5d\037\uff5d\040\uff5d\041\uff5d\042\uff5d\043\uff5d\050" +
    "\uff5d\070\uff5d\001\002\000\032\005\uff5c\032\uff5c\034\uff5c" +
    "\035\uff5c\036\uff5c\037\uff5c\040\uff5c\041\uff5c\042\uff5c\043" +
    "\uff5c\050\uff5c\070\uff5c\001\002\000\032\005\uff58\032\uff58" +
    "\034\uff58\035\uff58\036\uff58\037\uff58\040\uff58\041\uff58\042" +
    "\uff58\043\uff58\050\uff58\070\uff58\001\002\000\032\005\uff5a" +
    "\032\uff5a\034\uff5a\035\uff5a\036\uff5a\037\uff5a\040\uff5a\041" +
    "\uff5a\042\uff5a\043\uff5a\050\uff5a\070\uff5a\001\002\000\032" +
    "\005\uff5b\032\uff5b\034\uff5b\035\uff5b\036\uff5b\037\uff5b\040" +
    "\uff5b\041\uff5b\042\uff5b\043\uff5b\050\uff5b\070\uff5b\001\002" +
    "\000\012\016\uff5e\033\uff5e\056\uff5e\057\uff5e\001\002\000" +
    "\034\005\170\032\204\033\uff84\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\070" +
    "\200\001\002\000\032\005\170\032\204\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\070\200\001\002\000\004\006\253\001\002\000\004" +
    "\005\257\001\002\000\064\007\uff92\015\uff92\016\uff92\025" +
    "\uff92\026\uff92\027\uff92\030\uff92\031\uff92\033\uff92\042\uff92" +
    "\043\uff92\046\uff92\047\uff92\052\uff92\056\uff92\057\uff92\061" +
    "\uff92\062\uff92\063\uff92\064\uff92\076\uff92\077\uff92\100\uff92" +
    "\101\uff92\102\uff92\001\002\000\064\007\uff8a\015\uff8a\016" +
    "\uff8a\025\uff8a\026\uff8a\027\uff8a\030\uff8a\031\uff8a\033\uff8a" +
    "\042\uff8a\043\uff8a\046\uff8a\047\uff8a\052\uff8a\056\uff8a\057" +
    "\uff8a\061\uff8a\062\uff8a\063\uff8a\064\uff8a\076\uff8a\077\uff8a" +
    "\100\uff8a\101\uff8a\102\uff8a\001\002\000\066\007\uff8b\015" +
    "\uff8b\016\uff8b\025\uff8b\026\uff8b\027\uff8b\030\uff8b\031\uff8b" +
    "\033\uff8b\042\uff8b\043\uff8b\046\uff8b\047\uff8b\051\271\052" +
    "\uff8b\056\uff8b\057\uff8b\061\uff8b\062\uff8b\063\uff8b\064\uff8b" +
    "\076\uff8b\077\uff8b\100\uff8b\101\uff8b\102\uff8b\001\002\000" +
    "\072\006\uff8d\007\uff89\015\uff89\016\uff89\025\uff89\026\uff89" +
    "\027\uff89\030\uff89\031\uff89\032\261\033\uff89\042\uff89\043" +
    "\uff89\046\uff89\047\uff89\051\263\052\uff89\056\uff89\057\uff89" +
    "\061\uff89\062\uff89\063\uff89\064\uff89\076\uff89\077\uff89\100" +
    "\uff89\101\uff89\102\uff89\001\002\000\064\007\uff8e\015\uff8e" +
    "\016\uff8e\025\uff8e\026\uff8e\027\uff8e\030\uff8e\031\uff8e\033" +
    "\uff8e\042\uff8e\043\uff8e\046\uff8e\047\uff8e\052\uff8e\056\uff8e" +
    "\057\uff8e\061\uff8e\062\uff8e\063\uff8e\064\uff8e\076\uff8e\077" +
    "\uff8e\100\uff8e\101\uff8e\102\uff8e\001\002\000\034\005\170" +
    "\032\204\033\uff84\034\161\035\154\036\171\037\173\040" +
    "\172\041\164\042\141\043\076\050\113\070\200\001\002" +
    "\000\004\006\253\001\002\000\032\005\170\032\204\034" +
    "\161\035\154\036\171\037\173\040\172\041\164\042\141" +
    "\043\076\050\113\070\200\001\002\000\004\052\265\001" +
    "\002\000\066\007\uff7e\015\uff7e\016\uff7e\025\uff7e\026\uff7e" +
    "\027\uff7e\030\uff7e\031\uff7e\033\uff7e\042\uff7e\043\uff7e\046" +
    "\uff7e\047\uff7e\051\uff7e\052\uff7e\056\uff7e\057\uff7e\061\uff7e" +
    "\062\uff7e\063\uff7e\064\uff7e\076\uff7e\077\uff7e\100\uff7e\101" +
    "\uff7e\102\uff7e\001\002\000\064\007\uff8c\015\uff8c\016\uff8c" +
    "\025\uff8c\026\uff8c\027\uff8c\030\uff8c\031\uff8c\033\uff8c\042" +
    "\uff8c\043\uff8c\046\uff8c\047\uff8c\052\uff8c\056\uff8c\057\uff8c" +
    "\061\uff8c\062\uff8c\063\uff8c\064\uff8c\076\uff8c\077\uff8c\100" +
    "\uff8c\101\uff8c\102\uff8c\001\002\000\004\033\270\001\002" +
    "\000\064\007\uff87\015\uff87\016\uff87\025\uff87\026\uff87\027" +
    "\uff87\030\uff87\031\uff87\033\uff87\042\uff87\043\uff87\046\uff87" +
    "\047\uff87\052\uff87\056\uff87\057\uff87\061\uff87\062\uff87\063" +
    "\uff87\064\uff87\076\uff87\077\uff87\100\uff87\101\uff87\102\uff87" +
    "\001\002\000\032\005\170\032\204\034\161\035\154\036" +
    "\171\037\173\040\172\041\164\042\141\043\076\050\113" +
    "\070\200\001\002\000\004\052\273\001\002\000\066\007" +
    "\uff7f\015\uff7f\016\uff7f\025\uff7f\026\uff7f\027\uff7f\030\uff7f" +
    "\031\uff7f\033\uff7f\042\uff7f\043\uff7f\046\uff7f\047\uff7f\051" +
    "\uff7f\052\uff7f\056\uff7f\057\uff7f\061\uff7f\062\uff7f\063\uff7f" +
    "\064\uff7f\076\uff7f\077\uff7f\100\uff7f\101\uff7f\102\uff7f\001" +
    "\002\000\004\052\275\001\002\000\066\007\uff80\015\uff80" +
    "\016\uff80\025\uff80\026\uff80\027\uff80\030\uff80\031\uff80\033" +
    "\uff80\042\uff80\043\uff80\046\uff80\047\uff80\051\uff80\052\uff80" +
    "\056\uff80\057\uff80\061\uff80\062\uff80\063\uff80\064\uff80\076" +
    "\uff80\077\uff80\100\uff80\101\uff80\102\uff80\001\002\000\004" +
    "\033\277\001\002\000\064\007\uff88\015\uff88\016\uff88\025" +
    "\uff88\026\uff88\027\uff88\030\uff88\031\uff88\033\uff88\042\uff88" +
    "\043\uff88\046\uff88\047\uff88\052\uff88\056\uff88\057\uff88\061" +
    "\uff88\062\uff88\063\uff88\064\uff88\076\uff88\077\uff88\100\uff88" +
    "\101\uff88\102\uff88\001\002\000\004\114\305\001\002\000" +
    "\034\005\170\032\156\034\161\035\154\036\171\037\173" +
    "\040\172\041\164\042\141\043\076\050\113\060\157\070" +
    "\200\001\002\000\034\005\170\032\156\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\060\157\070\200\001\002\000\012\016\uff62\033\uff62" +
    "\056\uff62\057\uff62\001\002\000\012\016\uff63\033\uff63\056" +
    "\uff63\057\302\001\002\000\032\005\170\032\204\034\161" +
    "\035\154\036\171\037\173\040\172\041\164\042\141\043" +
    "\076\050\113\070\200\001\002\000\004\076\307\001\002" +
    "\000\032\005\170\032\204\034\161\035\154\036\171\037" +
    "\173\040\172\041\164\042\141\043\076\050\113\070\200" +
    "\001\002\000\046\007\uffb7\016\uffb7\025\uffb7\026\uffb7\027" +
    "\uffb7\030\uffb7\031\uffb7\033\uffb7\046\uffb7\047\uffb7\052\uffb7" +
    "\056\uffb7\057\uffb7\061\uffb7\062\uffb7\063\uffb7\064\uffb7\076" +
    "\uffb7\001\002\000\046\007\uffbb\016\uffbb\025\uffbb\026\uffbb" +
    "\027\uffbb\030\uffbb\031\uffbb\033\uffbb\046\uffbb\047\uffbb\052" +
    "\uffbb\056\uffbb\057\uffbb\061\uffbb\062\uffbb\063\uffbb\064\uffbb" +
    "\076\uffbb\001\002\000\046\007\uffba\016\uffba\025\uffba\026" +
    "\uffba\027\uffba\030\uffba\031\uffba\033\uffba\046\uffba\047\uffba" +
    "\052\uffba\056\uffba\057\uffba\061\uffba\062\uffba\063\uffba\064" +
    "\uffba\076\uffba\001\002\000\012\016\uff61\033\uff61\056\uff61" +
    "\057\uff61\001\002\000\010\033\315\056\301\057\302\001" +
    "\002\000\014\016\uff60\033\uff60\056\uff60\057\uff60\114\305" +
    "\001\002\000\102\005\uffd3\007\uffd3\014\uffd3\017\uffd3\020" +
    "\uffd3\021\uffd3\022\uffd3\023\uffd3\024\uffd3\032\uffd3\042\uffd3" +
    "\043\uffd3\045\uffd3\050\uffd3\054\uffd3\065\uffd3\066\uffd3\067" +
    "\uffd3\071\uffd3\072\uffd3\073\uffd3\074\uffd3\075\uffd3\103\uffd3" +
    "\104\uffd3\105\uffd3\106\uffd3\107\uffd3\110\uffd3\111\uffd3\112" +
    "\uffd3\113\uffd3\001\002\000\102\005\uffd2\007\uffd2\014\uffd2" +
    "\017\uffd2\020\uffd2\021\uffd2\022\uffd2\023\uffd2\024\uffd2\032" +
    "\uffd2\042\uffd2\043\uffd2\045\uffd2\050\uffd2\054\uffd2\065\uffd2" +
    "\066\uffd2\067\uffd2\071\uffd2\072\uffd2\073\uffd2\074\uffd2\075" +
    "\uffd2\103\uffd2\104\uffd2\105\uffd2\106\uffd2\107\uffd2\110\uffd2" +
    "\111\uffd2\112\uffd2\113\uffd2\001\002\000\034\005\170\032" +
    "\204\033\uff84\034\161\035\154\036\171\037\173\040\172" +
    "\041\164\042\141\043\076\050\113\070\200\001\002\000" +
    "\004\033\322\001\002\000\004\007\uff52\001\002\000\004" +
    "\007\uff77\001\002\000\004\007\074\001\002\000\076\005" +
    "\135\007\146\014\326\017\040\020\036\021\044\022\047" +
    "\023\046\024\043\032\153\042\141\043\076\045\035\050" +
    "\113\054\105\065\115\066\124\067\144\071\114\072\130" +
    "\073\112\103\103\104\136\105\134\106\116\107\137\110" +
    "\110\111\147\112\077\113\127\001\002\000\004\066\uff76" +
    "\001\002\000\004\066\330\001\002\000\004\032\331\001" +
    "\002\000\034\005\170\032\156\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\060" +
    "\157\070\200\001\002\000\010\033\333\056\301\057\302" +
    "\001\002\000\102\005\uff75\007\uff75\014\uff75\017\uff75\020" +
    "\uff75\021\uff75\022\uff75\023\uff75\024\uff75\032\uff75\042\uff75" +
    "\043\uff75\045\uff75\050\uff75\054\uff75\065\uff75\066\uff75\067" +
    "\uff75\071\uff75\072\uff75\073\uff75\074\uff75\075\uff75\103\uff75" +
    "\104\uff75\105\uff75\106\uff75\107\uff75\110\uff75\111\uff75\112" +
    "\uff75\113\uff75\001\002\000\102\005\uffd0\007\uffd0\014\uffd0" +
    "\017\uffd0\020\uffd0\021\uffd0\022\uffd0\023\uffd0\024\uffd0\032" +
    "\uffd0\042\uffd0\043\uffd0\045\uffd0\050\uffd0\054\uffd0\065\uffd0" +
    "\066\uffd0\067\uffd0\071\uffd0\072\uffd0\073\uffd0\074\uffd0\075" +
    "\uffd0\103\uffd0\104\uffd0\105\uffd0\106\uffd0\107\uffd0\110\uffd0" +
    "\111\uffd0\112\uffd0\113\uffd0\001\002\000\032\005\170\032" +
    "\204\034\161\035\154\036\171\037\173\040\172\041\164" +
    "\042\141\043\076\050\113\070\200\001\002\000\032\005" +
    "\170\032\204\034\161\035\154\036\171\037\173\040\172" +
    "\041\164\042\141\043\076\050\113\070\200\001\002\000" +
    "\032\005\170\032\204\034\161\035\154\036\171\037\173" +
    "\040\172\041\164\042\141\043\076\050\113\070\200\001" +
    "\002\000\102\005\uffd4\007\uffd4\014\uffd4\017\uffd4\020\uffd4" +
    "\021\uffd4\022\uffd4\023\uffd4\024\uffd4\032\uffd4\042\uffd4\043" +
    "\uffd4\045\uffd4\050\uffd4\054\uffd4\065\uffd4\066\uffd4\067\uffd4" +
    "\071\uffd4\072\uffd4\073\uffd4\074\uffd4\075\uffd4\103\uffd4\104" +
    "\uffd4\105\uffd4\106\uffd4\107\uffd4\110\uffd4\111\uffd4\112\uffd4" +
    "\113\uffd4\001\002\000\032\005\170\032\204\034\161\035" +
    "\154\036\171\037\173\040\172\041\164\042\141\043\076" +
    "\050\113\070\200\001\002\000\032\005\170\032\204\034" +
    "\161\035\154\036\171\037\173\040\172\041\164\042\141" +
    "\043\076\050\113\070\200\001\002\000\010\007\uffc0\016" +
    "\uffc0\033\uffc0\001\002\000\010\007\uffbf\016\uffbf\033\uffbf" +
    "\001\002\000\010\007\uffbe\016\uffbe\033\uffbe\001\002\000" +
    "\010\007\uffc1\016\uffc1\033\uffc1\001\002\000\010\007\uffc2" +
    "\016\uffc2\033\uffc2\001\002\000\046\007\uffb9\016\uffb9\025" +
    "\uffb9\026\uffb9\027\uffb9\030\uffb9\031\uffb9\033\uffb9\046\uffb9" +
    "\047\uffb9\052\uffb9\056\uffb9\057\uffb9\061\uffb9\062\uffb9\063" +
    "\uffb9\064\uffb9\076\uffb9\001\002\000\034\005\170\032\204" +
    "\033\uff84\034\161\035\154\036\171\037\173\040\172\041" +
    "\164\042\141\043\076\050\113\070\200\001\002\000\004" +
    "\033\353\001\002\000\004\007\uff54\001\002\000\034\005" +
    "\170\032\204\033\uff84\034\161\035\154\036\171\037\173" +
    "\040\172\041\164\042\141\043\076\050\113\070\200\001" +
    "\002\000\004\033\356\001\002\000\004\007\uff57\001\002" +
    "\000\034\005\170\032\204\033\uff84\034\161\035\154\036" +
    "\171\037\173\040\172\041\164\042\141\043\076\050\113" +
    "\070\200\001\002\000\004\033\361\001\002\000\004\007" +
    "\uff56\001\002\000\102\005\uffd5\007\uffd5\014\uffd5\017\uffd5" +
    "\020\uffd5\021\uffd5\022\uffd5\023\uffd5\024\uffd5\032\uffd5\042" +
    "\uffd5\043\uffd5\045\uffd5\050\uffd5\054\uffd5\065\uffd5\066\uffd5" +
    "\067\uffd5\071\uffd5\072\uffd5\073\uffd5\074\uffd5\075\uffd5\103" +
    "\uffd5\104\uffd5\105\uffd5\106\uffd5\107\uffd5\110\uffd5\111\uffd5" +
    "\112\uffd5\113\uffd5\001\002\000\032\005\170\032\204\034" +
    "\161\035\154\036\171\037\173\040\172\041\164\042\141" +
    "\043\076\050\113\070\200\001\002\000\004\052\365\001" +
    "\002\000\066\007\uff81\015\uff81\016\uff81\025\uff81\026\uff81" +
    "\027\uff81\030\uff81\031\uff81\033\uff81\042\uff81\043\uff81\046" +
    "\uff81\047\uff81\051\uff81\052\uff81\056\uff81\057\uff81\061\uff81" +
    "\062\uff81\063\uff81\064\uff81\076\uff81\077\uff81\100\uff81\101" +
    "\uff81\102\uff81\001\002\000\102\005\uffc4\007\uffc4\014\uffc4" +
    "\017\uffc4\020\uffc4\021\uffc4\022\uffc4\023\uffc4\024\uffc4\032" +
    "\uffc4\042\uffc4\043\uffc4\045\uffc4\050\uffc4\054\uffc4\065\uffc4" +
    "\066\uffc4\067\uffc4\071\uffc4\072\uffc4\073\uffc4\074\uffc4\075" +
    "\uffc4\103\uffc4\104\uffc4\105\uffc4\106\uffc4\107\uffc4\110\uffc4" +
    "\111\uffc4\112\uffc4\113\uffc4\001\002\000\034\005\170\032" +
    "\204\033\uff84\034\161\035\154\036\171\037\173\040\172" +
    "\041\164\042\141\043\076\050\113\070\200\001\002\000" +
    "\004\033\371\001\002\000\004\007\uff50\001\002\000\102" +
    "\005\uffcf\007\uffcf\014\uffcf\017\uffcf\020\uffcf\021\uffcf\022" +
    "\uffcf\023\uffcf\024\uffcf\032\uffcf\042\uffcf\043\uffcf\045\uffcf" +
    "\050\uffcf\054\uffcf\065\uffcf\066\uffcf\067\uffcf\071\uffcf\072" +
    "\uffcf\073\uffcf\074\uffcf\075\uffcf\103\uffcf\104\uffcf\105\uffcf" +
    "\106\uffcf\107\uffcf\110\uffcf\111\uffcf\112\uffcf\113\uffcf\001" +
    "\002\000\034\005\170\032\156\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\060" +
    "\157\070\200\001\002\000\010\033\375\056\301\057\302" +
    "\001\002\000\004\013\376\001\002\000\004\007\uff79\001" +
    "\002\000\004\007\074\001\002\000\076\005\135\007\146" +
    "\014\u0101\017\040\020\036\021\044\022\047\023\046\024" +
    "\043\032\153\042\141\043\076\045\035\050\113\054\105" +
    "\065\115\066\124\067\144\071\114\072\130\073\112\103" +
    "\103\104\136\105\134\106\116\107\137\110\110\111\147" +
    "\112\077\113\127\001\002\000\102\005\uff78\007\uff78\014" +
    "\uff78\017\uff78\020\uff78\021\uff78\022\uff78\023\uff78\024\uff78" +
    "\032\uff78\042\uff78\043\uff78\045\uff78\050\uff78\054\uff78\065" +
    "\uff78\066\uff78\067\uff78\071\uff78\072\uff78\073\uff78\074\uff78" +
    "\075\uff78\103\uff78\104\uff78\105\uff78\106\uff78\107\uff78\110" +
    "\uff78\111\uff78\112\uff78\113\uff78\001\002\000\102\005\uffcb" +
    "\007\uffcb\014\uffcb\017\uffcb\020\uffcb\021\uffcb\022\uffcb\023" +
    "\uffcb\024\uffcb\032\uffcb\042\uffcb\043\uffcb\045\uffcb\050\uffcb" +
    "\054\uffcb\065\uffcb\066\uffcb\067\uffcb\071\uffcb\072\uffcb\073" +
    "\uffcb\074\uffcb\075\uffcb\103\uffcb\104\uffcb\105\uffcb\106\uffcb" +
    "\107\uffcb\110\uffcb\111\uffcb\112\uffcb\113\uffcb\001\002\000" +
    "\102\005\uffd1\007\uffd1\014\uffd1\017\uffd1\020\uffd1\021\uffd1" +
    "\022\uffd1\023\uffd1\024\uffd1\032\uffd1\042\uffd1\043\uffd1\045" +
    "\uffd1\050\uffd1\054\uffd1\065\uffd1\066\uffd1\067\uffd1\071\uffd1" +
    "\072\uffd1\073\uffd1\074\uffd1\075\uffd1\103\uffd1\104\uffd1\105" +
    "\uffd1\106\uffd1\107\uffd1\110\uffd1\111\uffd1\112\uffd1\113\uffd1" +
    "\001\002\000\102\005\uffce\007\uffce\014\uffce\017\uffce\020" +
    "\uffce\021\uffce\022\uffce\023\uffce\024\uffce\032\uffce\042\uffce" +
    "\043\uffce\045\uffce\050\uffce\054\uffce\065\uffce\066\uffce\067" +
    "\uffce\071\uffce\072\uffce\073\uffce\074\uffce\075\uffce\103\uffce" +
    "\104\uffce\105\uffce\106\uffce\107\uffce\110\uffce\111\uffce\112" +
    "\uffce\113\uffce\001\002\000\034\005\170\032\204\033\uff84" +
    "\034\161\035\154\036\171\037\173\040\172\041\164\042" +
    "\141\043\076\050\113\070\200\001\002\000\004\033\u0107" +
    "\001\002\000\004\007\uff55\001\002\000\032\005\135\017" +
    "\040\020\036\021\044\022\047\023\046\024\043\032\153" +
    "\042\141\043\076\045\035\050\113\001\002\000\020\015" +
    "\335\042\311\043\312\077\336\100\342\101\341\102\337" +
    "\001\002\000\004\005\u0115\001\002\000\004\016\u010c\001" +
    "\002\000\034\005\170\032\156\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\060" +
    "\157\070\200\001\002\000\010\016\u010e\056\301\057\302" +
    "\001\002\000\014\005\170\032\153\042\141\043\076\050" +
    "\113\001\002\000\004\033\u0110\001\002\000\004\013\u0111" +
    "\001\002\000\004\007\uff7d\001\002\000\004\007\074\001" +
    "\002\000\076\005\135\007\146\014\u0114\017\040\020\036" +
    "\021\044\022\047\023\046\024\043\032\153\042\141\043" +
    "\076\045\035\050\113\054\105\065\115\066\124\067\144" +
    "\071\114\072\130\073\112\103\103\104\136\105\134\106" +
    "\116\107\137\110\110\111\147\112\077\113\127\001\002" +
    "\000\102\005\uff7c\007\uff7c\014\uff7c\017\uff7c\020\uff7c\021" +
    "\uff7c\022\uff7c\023\uff7c\024\uff7c\032\uff7c\042\uff7c\043\uff7c" +
    "\045\uff7c\050\uff7c\054\uff7c\065\uff7c\066\uff7c\067\uff7c\071" +
    "\uff7c\072\uff7c\073\uff7c\074\uff7c\075\uff7c\103\uff7c\104\uff7c" +
    "\105\uff7c\106\uff7c\107\uff7c\110\uff7c\111\uff7c\112\uff7c\113" +
    "\uff7c\001\002\000\004\015\u0116\001\002\000\032\005\170" +
    "\032\204\034\161\035\154\036\171\037\173\040\172\041" +
    "\164\042\141\043\076\050\113\070\200\001\002\000\004" +
    "\016\u0118\001\002\000\034\005\170\032\156\034\161\035" +
    "\154\036\171\037\173\040\172\041\164\042\141\043\076" +
    "\050\113\060\157\070\200\001\002\000\010\016\u011a\056" +
    "\301\057\302\001\002\000\014\005\170\032\153\042\141" +
    "\043\076\050\113\001\002\000\004\033\u011c\001\002\000" +
    "\004\013\u011d\001\002\000\004\007\uff7b\001\002\000\004" +
    "\007\074\001\002\000\076\005\135\007\146\014\u0120\017" +
    "\040\020\036\021\044\022\047\023\046\024\043\032\153" +
    "\042\141\043\076\045\035\050\113\054\105\065\115\066" +
    "\124\067\144\071\114\072\130\073\112\103\103\104\136" +
    "\105\134\106\116\107\137\110\110\111\147\112\077\113" +
    "\127\001\002\000\102\005\uff7a\007\uff7a\014\uff7a\017\uff7a" +
    "\020\uff7a\021\uff7a\022\uff7a\023\uff7a\024\uff7a\032\uff7a\042" +
    "\uff7a\043\uff7a\045\uff7a\050\uff7a\054\uff7a\065\uff7a\066\uff7a" +
    "\067\uff7a\071\uff7a\072\uff7a\073\uff7a\074\uff7a\075\uff7a\103" +
    "\uff7a\104\uff7a\105\uff7a\106\uff7a\107\uff7a\110\uff7a\111\uff7a" +
    "\112\uff7a\113\uff7a\001\002\000\102\005\uffc5\007\uffc5\014" +
    "\uffc5\017\uffc5\020\uffc5\021\uffc5\022\uffc5\023\uffc5\024\uffc5" +
    "\032\uffc5\042\uffc5\043\uffc5\045\uffc5\050\uffc5\054\uffc5\065" +
    "\uffc5\066\uffc5\067\uffc5\071\uffc5\072\uffc5\073\uffc5\074\uffc5" +
    "\075\uffc5\103\uffc5\104\uffc5\105\uffc5\106\uffc5\107\uffc5\110" +
    "\uffc5\111\uffc5\112\uffc5\113\uffc5\001\002\000\004\006\253" +
    "\001\002\000\064\007\uff94\015\uff94\016\uff94\025\uff94\026" +
    "\uff94\027\uff94\030\uff94\031\uff94\033\uff94\042\uff94\043\uff94" +
    "\046\uff94\047\uff94\052\uff94\056\uff94\057\uff94\061\uff94\062" +
    "\uff94\063\uff94\064\uff94\076\uff94\077\uff94\100\uff94\101\uff94" +
    "\102\uff94\001\002\000\006\005\170\050\113\001\002\000" +
    "\010\014\uff6d\074\u0127\075\u0128\001\002\000\004\014\u0131" +
    "\001\002\000\004\076\u012d\001\002\000\032\005\170\032" +
    "\204\034\161\035\154\036\171\037\173\040\172\041\164" +
    "\042\141\043\076\050\113\070\200\001\002\000\004\076" +
    "\u012a\001\002\000\004\007\uff73\001\002\000\004\007\074" +
    "\001\002\000\102\005\135\007\146\014\uff72\017\040\020" +
    "\036\021\044\022\047\023\046\024\043\032\153\042\141" +
    "\043\076\045\035\050\113\054\105\065\115\066\124\067" +
    "\144\071\114\072\130\073\112\074\uff72\075\uff72\103\103" +
    "\104\136\105\134\106\116\107\137\110\110\111\147\112" +
    "\077\113\127\001\002\000\004\007\uff6f\001\002\000\004" +
    "\007\074\001\002\000\074\005\135\007\u0130\017\040\020" +
    "\036\021\044\022\047\023\046\024\043\032\153\042\141" +
    "\043\076\045\035\050\113\054\105\065\115\066\124\067" +
    "\144\071\114\072\130\073\112\103\103\104\136\105\134" +
    "\106\116\107\137\110\110\111\147\112\077\113\127\001" +
    "\002\000\076\005\uffc3\007\uffc3\014\uff6e\017\uffc3\020\uffc3" +
    "\021\uffc3\022\uffc3\023\uffc3\024\uffc3\032\uffc3\042\uffc3\043" +
    "\uffc3\045\uffc3\050\uffc3\054\uffc3\065\uffc3\066\uffc3\067\uffc3" +
    "\071\uffc3\072\uffc3\073\uffc3\103\uffc3\104\uffc3\105\uffc3\106" +
    "\uffc3\107\uffc3\110\uffc3\111\uffc3\112\uffc3\113\uffc3\001\002" +
    "\000\102\005\uff74\007\uff74\014\uff74\017\uff74\020\uff74\021" +
    "\uff74\022\uff74\023\uff74\024\uff74\032\uff74\042\uff74\043\uff74" +
    "\045\uff74\050\uff74\054\uff74\065\uff74\066\uff74\067\uff74\071" +
    "\uff74\072\uff74\073\uff74\074\uff74\075\uff74\103\uff74\104\uff74" +
    "\105\uff74\106\uff74\107\uff74\110\uff74\111\uff74\112\uff74\113" +
    "\uff74\001\002\000\004\033\u0133\001\002\000\004\013\u0134" +
    "\001\002\000\004\007\u0135\001\002\000\004\075\u0136\001" +
    "\002\000\032\005\170\032\204\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\070" +
    "\200\001\002\000\004\076\u0138\001\002\000\004\007\uff71" +
    "\001\002\000\004\007\074\001\002\000\102\005\135\007" +
    "\146\014\uff70\017\040\020\036\021\044\022\047\023\046" +
    "\024\043\032\153\042\141\043\076\045\035\050\113\054" +
    "\105\065\115\066\124\067\144\071\114\072\130\073\112" +
    "\074\uff70\075\uff70\103\103\104\136\105\134\106\116\107" +
    "\137\110\110\111\147\112\077\113\127\001\002\000\102" +
    "\005\uffcd\007\uffcd\014\uffcd\017\uffcd\020\uffcd\021\uffcd\022" +
    "\uffcd\023\uffcd\024\uffcd\032\uffcd\042\uffcd\043\uffcd\045\uffcd" +
    "\050\uffcd\054\uffcd\065\uffcd\066\uffcd\067\uffcd\071\uffcd\072" +
    "\uffcd\073\uffcd\074\uffcd\075\uffcd\103\uffcd\104\uffcd\105\uffcd" +
    "\106\uffcd\107\uffcd\110\uffcd\111\uffcd\112\uffcd\113\uffcd\001" +
    "\002\000\034\005\170\032\204\033\uff84\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\070\200\001\002\000\004\033\u013e\001\002\000\004" +
    "\007\uff53\001\002\000\034\005\170\032\156\034\161\035" +
    "\154\036\171\037\173\040\172\041\164\042\141\043\076" +
    "\050\113\060\157\070\200\001\002\000\010\033\u0141\056" +
    "\301\057\302\001\002\000\004\013\u0142\001\002\000\004" +
    "\007\uff6c\001\002\000\004\007\074\001\002\000\076\005" +
    "\135\007\146\014\u0145\017\040\020\036\021\044\022\047" +
    "\023\046\024\043\032\153\042\141\043\076\045\035\050" +
    "\113\054\105\065\115\066\124\067\144\071\114\072\130" +
    "\073\112\103\103\104\136\105\134\106\116\107\137\110" +
    "\110\111\147\112\077\113\127\001\002\000\104\005\uff6b" +
    "\007\uff6b\014\uff6b\017\uff6b\020\uff6b\021\uff6b\022\uff6b\023" +
    "\uff6b\024\uff6b\032\uff6b\042\uff6b\043\uff6b\045\uff6b\050\uff6b" +
    "\054\uff6b\055\uff6b\065\uff6b\066\uff6b\067\uff6b\071\uff6b\072" +
    "\uff6b\073\uff6b\074\uff6b\075\uff6b\103\uff6b\104\uff6b\105\uff6b" +
    "\106\uff6b\107\uff6b\110\uff6b\111\uff6b\112\uff6b\113\uff6b\001" +
    "\002\000\104\005\uff64\007\uff64\014\uff64\017\uff64\020\uff64" +
    "\021\uff64\022\uff64\023\uff64\024\uff64\032\uff64\042\uff64\043" +
    "\uff64\045\uff64\050\uff64\054\uff64\055\u0147\065\uff64\066\uff64" +
    "\067\uff64\071\uff64\072\uff64\073\uff64\074\uff64\075\uff64\103" +
    "\uff64\104\uff64\105\uff64\106\uff64\107\uff64\110\uff64\111\uff64" +
    "\112\uff64\113\uff64\001\002\000\006\013\u0149\054\u014a\001" +
    "\002\000\102\005\uff6a\007\uff6a\014\uff6a\017\uff6a\020\uff6a" +
    "\021\uff6a\022\uff6a\023\uff6a\024\uff6a\032\uff6a\042\uff6a\043" +
    "\uff6a\045\uff6a\050\uff6a\054\uff6a\065\uff6a\066\uff6a\067\uff6a" +
    "\071\uff6a\072\uff6a\073\uff6a\074\uff6a\075\uff6a\103\uff6a\104" +
    "\uff6a\105\uff6a\106\uff6a\107\uff6a\110\uff6a\111\uff6a\112\uff6a" +
    "\113\uff6a\001\002\000\004\007\uff69\001\002\000\004\032" +
    "\u014b\001\002\000\034\005\170\032\156\034\161\035\154" +
    "\036\171\037\173\040\172\041\164\042\141\043\076\050" +
    "\113\060\157\070\200\001\002\000\010\033\u014d\056\301" +
    "\057\302\001\002\000\004\013\u014e\001\002\000\004\007" +
    "\uff67\001\002\000\004\007\074\001\002\000\076\005\135" +
    "\007\146\014\u0151\017\040\020\036\021\044\022\047\023" +
    "\046\024\043\032\153\042\141\043\076\045\035\050\113" +
    "\054\105\065\115\066\124\067\144\071\114\072\130\073" +
    "\112\103\103\104\136\105\134\106\116\107\137\110\110" +
    "\111\147\112\077\113\127\001\002\000\104\005\uff66\007" +
    "\uff66\014\uff66\017\uff66\020\uff66\021\uff66\022\uff66\023\uff66" +
    "\024\uff66\032\uff66\042\uff66\043\uff66\045\uff66\050\uff66\054" +
    "\uff66\055\uff66\065\uff66\066\uff66\067\uff66\071\uff66\072\uff66" +
    "\073\uff66\074\uff66\075\uff66\103\uff66\104\uff66\105\uff66\106" +
    "\uff66\107\uff66\110\uff66\111\uff66\112\uff66\113\uff66\001\002" +
    "\000\104\005\uff64\007\uff64\014\uff64\017\uff64\020\uff64\021" +
    "\uff64\022\uff64\023\uff64\024\uff64\032\uff64\042\uff64\043\uff64" +
    "\045\uff64\050\uff64\054\uff64\055\u0147\065\uff64\066\uff64\067" +
    "\uff64\071\uff64\072\uff64\073\uff64\074\uff64\075\uff64\103\uff64" +
    "\104\uff64\105\uff64\106\uff64\107\uff64\110\uff64\111\uff64\112" +
    "\uff64\113\uff64\001\002\000\102\005\uff65\007\uff65\014\uff65" +
    "\017\uff65\020\uff65\021\uff65\022\uff65\023\uff65\024\uff65\032" +
    "\uff65\042\uff65\043\uff65\045\uff65\050\uff65\054\uff65\065\uff65" +
    "\066\uff65\067\uff65\071\uff65\072\uff65\073\uff65\074\uff65\075" +
    "\uff65\103\uff65\104\uff65\105\uff65\106\uff65\107\uff65\110\uff65" +
    "\111\uff65\112\uff65\113\uff65\001\002\000\004\007\074\001" +
    "\002\000\076\005\135\007\146\014\u0156\017\040\020\036" +
    "\021\044\022\047\023\046\024\043\032\153\042\141\043" +
    "\076\045\035\050\113\054\105\065\115\066\124\067\144" +
    "\071\114\072\130\073\112\103\103\104\136\105\134\106" +
    "\116\107\137\110\110\111\147\112\077\113\127\001\002" +
    "\000\102\005\uff68\007\uff68\014\uff68\017\uff68\020\uff68\021" +
    "\uff68\022\uff68\023\uff68\024\uff68\032\uff68\042\uff68\043\uff68" +
    "\045\uff68\050\uff68\054\uff68\065\uff68\066\uff68\067\uff68\071" +
    "\uff68\072\uff68\073\uff68\074\uff68\075\uff68\103\uff68\104\uff68" +
    "\105\uff68\106\uff68\107\uff68\110\uff68\111\uff68\112\uff68\113" +
    "\uff68\001\002\000\004\005\u0158\001\002\000\010\007\uffe4" +
    "\015\u0159\016\uffe4\001\002\000\032\005\170\032\204\034" +
    "\161\035\154\036\171\037\173\040\172\041\164\042\141" +
    "\043\076\050\113\070\200\001\002\000\006\007\uffe7\016" +
    "\uffe7\001\002\000\006\007\uffe5\016\uffe5\001\002\000\004" +
    "\007\uffdf\001\002\000\102\005\uffcc\007\uffcc\014\uffcc\017" +
    "\uffcc\020\uffcc\021\uffcc\022\uffcc\023\uffcc\024\uffcc\032\uffcc" +
    "\042\uffcc\043\uffcc\045\uffcc\050\uffcc\054\uffcc\065\uffcc\066" +
    "\uffcc\067\uffcc\071\uffcc\072\uffcc\073\uffcc\074\uffcc\075\uffcc" +
    "\103\uffcc\104\uffcc\105\uffcc\106\uffcc\107\uffcc\110\uffcc\111" +
    "\uffcc\112\uffcc\113\uffcc\001\002\000\010\007\uffe4\015\u0159" +
    "\016\uffe4\001\002\000\006\007\uffe6\016\uffe6\001\002\000" +
    "\034\005\170\032\204\033\uff84\034\161\035\154\036\171" +
    "\037\173\040\172\041\164\042\141\043\076\050\113\070" +
    "\200\001\002\000\004\033\u0162\001\002\000\004\007\uff51" +
    "\001\002\000\046\007\uffb8\016\uffb8\025\uffb8\026\uffb8\027" +
    "\uffb8\030\uffb8\031\uffb8\033\uffb8\046\uffb8\047\uffb8\052\uffb8" +
    "\056\uffb8\057\uffb8\061\uffb8\062\uffb8\063\uffb8\064\uffb8\076" +
    "\uffb8\001\002\000\102\005\uffd6\007\uffd6\014\uffd6\017\uffd6" +
    "\020\uffd6\021\uffd6\022\uffd6\023\uffd6\024\uffd6\032\uffd6\042" +
    "\uffd6\043\uffd6\045\uffd6\050\uffd6\054\uffd6\065\uffd6\066\uffd6" +
    "\067\uffd6\071\uffd6\072\uffd6\073\uffd6\074\uffd6\075\uffd6\103" +
    "\uffd6\104\uffd6\105\uffd6\106\uffd6\107\uffd6\110\uffd6\111\uffd6" +
    "\112\uffd6\113\uffd6\001\002\000\004\005\u0166\001\002\000" +
    "\006\016\uffd9\033\uffd9\001\002\000\006\007\uffea\016\uffea" +
    "\001\002\000\026\005\057\017\040\020\036\021\044\022" +
    "\047\023\046\024\043\033\uffdd\044\054\045\035\001\002" +
    "\000\004\033\u016a\001\002\000\004\013\u016b\001\002\000" +
    "\004\007\uffe1\001\002\000\004\007\074\001\002\000\076" +
    "\005\135\007\146\014\u016e\017\040\020\036\021\044\022" +
    "\047\023\046\024\043\032\153\042\141\043\076\045\035" +
    "\050\113\054\105\065\115\066\124\067\144\071\114\072" +
    "\130\073\112\103\103\104\136\105\134\106\116\107\137" +
    "\110\110\111\147\112\077\113\127\001\002\000\032\005" +
    "\uffe0\007\uffe0\010\uffe0\011\uffe0\014\uffe0\017\uffe0\020\uffe0" +
    "\021\uffe0\022\uffe0\023\uffe0\024\uffe0\045\uffe0\001\002\000" +
    "\004\005\u0170\001\002\000\010\007\uffe9\015\051\016\uffe9" +
    "\001\002\000\006\007\uffec\016\uffec\001\002\000\022\005" +
    "\057\017\040\020\036\021\044\022\047\023\046\024\043" +
    "\045\035\001\002\000\004\047\u0174\001\002\000\006\005" +
    "\uffb3\047\uffb3\001\002\000\006\002\ufffa\007\u0176\001\002" +
    "\000\006\002\ufff9\007\ufff9\001\002\000\004\005\u0178\001" +
    "\002\000\004\006\u0179\001\002\000\004\005\u017a\001\002" +
    "\000\004\047\u017b\001\002\000\004\007\u017c\001\002\000" +
    "\014\004\ufffe\007\ufffe\010\ufffe\011\ufffe\012\ufffe\001\002" +
    "\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u017b\000\010\003\003\004\005\005\004\001\001\000" +
    "\002\001\001\000\006\006\011\010\013\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\100\016\001\001\000\004\036" +
    "\017\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\023\001\001\000\012\010\030\011" +
    "\032\026\027\071\031\001\001\000\002\001\001\000\004" +
    "\070\u0174\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\014\044\022\036\072\040\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\073\052\001\001\000\030\015\u0166\016\164\017" +
    "\165\020\173\021\157\030\161\032\130\033\101\050\162" +
    "\051\174\056\154\001\001\000\012\014\057\022\036\024" +
    "\055\027\054\001\001\000\002\001\001\000\006\014\u0164" +
    "\022\036\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\014\063\022\036\001\001\000\006\014\065\022\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\101\070\001\001\000\002\001" +
    "\001\000\004\025\072\001\001\000\064\012\103\014\077" +
    "\020\117\022\036\023\074\030\141\032\130\033\101\037" +
    "\120\044\132\045\105\046\144\047\137\052\131\055\122" +
    "\056\147\057\151\060\150\061\121\062\142\063\124\064" +
    "\116\065\110\066\100\067\125\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\030\u0162\032\130\033\101\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\015\u015b\016\164\017\165\020" +
    "\173\021\157\030\161\032\130\033\101\050\162\051\174" +
    "\056\154\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\053\u0124\001\001\000\004\103\u0121\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\104\251\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\030\347" +
    "\032\130\033\101\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\034\015\176\016\164\017\165\020\173" +
    "\021\157\030\161\032\130\033\101\041\166\042\175\050" +
    "\162\051\174\056\154\001\001\000\002\001\001\000\002" +
    "\001\001\000\036\015\176\016\212\017\165\020\173\021" +
    "\157\022\211\030\161\032\130\033\101\041\313\042\175" +
    "\050\162\051\174\056\154\001\001\000\034\015\176\016" +
    "\164\017\165\020\173\021\157\030\161\032\130\033\101" +
    "\041\312\042\175\050\162\051\174\056\154\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\104\251\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\240" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\015\205\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\050\162\051\174\056\154\075" +
    "\204\001\001\000\036\015\176\016\212\017\165\020\173" +
    "\021\157\022\211\030\161\032\130\033\101\041\166\042" +
    "\175\050\162\051\174\056\154\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\015\210\016" +
    "\164\017\165\020\173\021\157\030\161\032\130\033\101" +
    "\050\162\051\174\056\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\016\225\017\165\020\173\021\157\030\161\032\130\033" +
    "\101\050\162\051\174\056\154\001\001\000\026\016\224" +
    "\017\165\020\173\021\157\030\161\032\130\033\101\050" +
    "\162\051\174\056\154\001\001\000\026\016\223\017\165" +
    "\020\173\021\157\030\161\032\130\033\101\050\162\051" +
    "\174\056\154\001\001\000\026\016\222\017\165\020\173" +
    "\021\157\030\161\032\130\033\101\050\162\051\174\056" +
    "\154\001\001\000\026\016\221\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\050\162\051\174\056\154\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\015\227\016" +
    "\164\017\165\020\173\021\157\030\161\032\130\033\101" +
    "\050\162\051\174\056\154\001\001\000\002\001\001\000" +
    "\034\015\233\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\034\232\035\231\050\162\051\174\056" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\015\235\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\050\162\051\174\056\154" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\015\246\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\050\162\051\174\056\154\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\034\015\233\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\034\232\035\275\050\162\051\174\056" +
    "\154\001\001\000\030\015\273\016\164\017\165\020\173" +
    "\021\157\030\161\032\130\033\101\050\162\051\174\056" +
    "\154\001\001\000\004\031\253\001\001\000\010\074\257" +
    "\076\255\077\254\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\105\261\001\001\000\002" +
    "\001\001\000\034\015\233\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\034\232\035\266\050\162" +
    "\051\174\056\154\001\001\000\004\031\265\001\001\000" +
    "\030\015\263\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\050\162\051\174\056\154\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\015\271\016\164\017" +
    "\165\020\173\021\157\030\161\032\130\033\101\050\162" +
    "\051\174\056\154\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\015\176\016" +
    "\164\017\165\020\173\021\157\030\161\032\130\033\101" +
    "\041\303\042\175\050\162\051\174\056\154\001\001\000" +
    "\034\015\176\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\041\302\042\175\050\162\051\174\056" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\015\305\016\164\017\165\020\173\021\157\030\161\032" +
    "\130\033\101\050\162\051\174\056\154\001\001\000\002" +
    "\001\001\000\030\015\307\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\050\162\051\174\056\154" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\015\233\016" +
    "\164\017\165\020\173\021\157\030\161\032\130\033\101" +
    "\034\232\035\320\050\162\051\174\056\154\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\111\323\001\001" +
    "\000\004\025\324\001\001\000\064\012\103\014\077\020" +
    "\117\022\036\023\074\030\141\032\130\033\101\037\120" +
    "\044\132\045\105\046\144\047\137\052\131\055\122\056" +
    "\147\057\151\060\150\061\121\062\142\063\124\064\116" +
    "\065\110\066\100\067\125\001\001\000\004\112\326\001" +
    "\001\000\002\001\001\000\002\001\001\000\034\015\176" +
    "\016\164\017\165\020\173\021\157\030\161\032\130\033" +
    "\101\041\331\042\175\050\162\051\174\056\154\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\015\346\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\050\162\051\174\056\154\001\001\000" +
    "\030\015\345\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\050\162\051\174\056\154\001\001\000" +
    "\030\015\344\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\050\162\051\174\056\154\001\001\000" +
    "\002\001\001\000\030\015\343\016\164\017\165\020\173" +
    "\021\157\030\161\032\130\033\101\050\162\051\174\056" +
    "\154\001\001\000\030\015\342\016\164\017\165\020\173" +
    "\021\157\030\161\032\130\033\101\050\162\051\174\056" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\034\015\233\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\034\232\035\351\050\162\051" +
    "\174\056\154\001\001\000\002\001\001\000\002\001\001" +
    "\000\034\015\233\016\164\017\165\020\173\021\157\030" +
    "\161\032\130\033\101\034\232\035\354\050\162\051\174" +
    "\056\154\001\001\000\002\001\001\000\002\001\001\000" +
    "\034\015\233\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\034\232\035\357\050\162\051\174\056" +
    "\154\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\015\363\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\050\162\051\174\056\154" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\034\015\233\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\034\232\035\367\050\162\051" +
    "\174\056\154\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\015\176\016\164\017\165\020" +
    "\173\021\157\030\161\032\130\033\101\041\373\042\175" +
    "\050\162\051\174\056\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\110\376\001\001\000\004\025\377" +
    "\001\001\000\064\012\103\014\077\020\117\022\036\023" +
    "\074\030\141\032\130\033\101\037\120\044\132\045\105" +
    "\046\144\047\137\052\131\055\122\056\147\057\151\060" +
    "\150\061\121\062\142\063\124\064\116\065\110\066\100" +
    "\067\125\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\034\015\233\016\164" +
    "\017\165\020\173\021\157\030\161\032\130\033\101\034" +
    "\232\035\u0105\050\162\051\174\056\154\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\014\u0109\020\117\022" +
    "\036\030\u0108\032\130\033\101\044\u010a\056\147\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\034\015\176\016\164\017\165\020\173\021\157\030\161" +
    "\032\130\033\101\041\u010c\042\175\050\162\051\174\056" +
    "\154\001\001\000\002\001\001\000\016\020\117\030\u0108" +
    "\032\130\033\101\044\u010e\056\147\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\106\u0111\001\001\000\004" +
    "\025\u0112\001\001\000\064\012\103\014\077\020\117\022" +
    "\036\023\074\030\141\032\130\033\101\037\120\044\132" +
    "\045\105\046\144\047\137\052\131\055\122\056\147\057" +
    "\151\060\150\061\121\062\142\063\124\064\116\065\110" +
    "\066\100\067\125\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\015\u0116\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\050\162\051\174\056\154\001" +
    "\001\000\002\001\001\000\034\015\176\016\164\017\165" +
    "\020\173\021\157\030\161\032\130\033\101\041\u0118\042" +
    "\175\050\162\051\174\056\154\001\001\000\002\001\001" +
    "\000\016\020\117\030\u0108\032\130\033\101\044\u011a\056" +
    "\147\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\107\u011d\001\001\000\004\025\u011e\001\001\000\064\012" +
    "\103\014\077\020\117\022\036\023\074\030\141\032\130" +
    "\033\101\037\120\044\132\045\105\046\144\047\137\052" +
    "\131\055\122\056\147\057\151\060\150\061\121\062\142" +
    "\063\124\064\116\065\110\066\100\067\125\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\031\u0122\001\001" +
    "\000\002\001\001\000\010\030\u0131\032\130\033\101\001" +
    "\001\000\004\054\u0125\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\015\u0128\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\050\162\051\174\056\154" +
    "\001\001\000\002\001\001\000\004\113\u012a\001\001\000" +
    "\004\025\u012b\001\001\000\064\012\103\014\077\020\117" +
    "\022\036\023\074\030\141\032\130\033\101\037\120\044" +
    "\132\045\105\046\144\047\137\052\131\055\122\056\147" +
    "\057\151\060\150\061\121\062\142\063\124\064\116\065" +
    "\110\066\100\067\125\001\001\000\004\115\u012d\001\001" +
    "\000\004\025\u012e\001\001\000\064\012\103\014\077\020" +
    "\117\022\036\023\074\030\141\032\130\033\101\037\120" +
    "\044\132\045\105\046\144\047\137\052\131\055\122\056" +
    "\147\057\151\060\150\061\121\062\142\063\124\064\116" +
    "\065\110\066\100\067\125\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\015\u0136\016\164\017" +
    "\165\020\173\021\157\030\161\032\130\033\101\050\162" +
    "\051\174\056\154\001\001\000\002\001\001\000\004\114" +
    "\u0138\001\001\000\004\025\u0139\001\001\000\064\012\103" +
    "\014\077\020\117\022\036\023\074\030\141\032\130\033" +
    "\101\037\120\044\132\045\105\046\144\047\137\052\131" +
    "\055\122\056\147\057\151\060\150\061\121\062\142\063" +
    "\124\064\116\065\110\066\100\067\125\001\001\000\002" +
    "\001\001\000\034\015\233\016\164\017\165\020\173\021" +
    "\157\030\161\032\130\033\101\034\232\035\u013c\050\162" +
    "\051\174\056\154\001\001\000\002\001\001\000\002\001" +
    "\001\000\034\015\176\016\164\017\165\020\173\021\157" +
    "\030\161\032\130\033\101\041\u013f\042\175\050\162\051" +
    "\174\056\154\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\116\u0142\001\001\000\004\025\u0143\001\001\000" +
    "\064\012\103\014\077\020\117\022\036\023\074\030\141" +
    "\032\130\033\101\037\120\044\132\045\105\046\144\047" +
    "\137\052\131\055\122\056\147\057\151\060\150\061\121" +
    "\062\142\063\124\064\116\065\110\066\100\067\125\001" +
    "\001\000\004\117\u0145\001\001\000\004\040\u0147\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\120\u0153\001" +
    "\001\000\002\001\001\000\034\015\176\016\164\017\165" +
    "\020\173\021\157\030\161\032\130\033\101\041\u014b\042" +
    "\175\050\162\051\174\056\154\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\121\u014e\001\001\000\004\025" +
    "\u014f\001\001\000\064\012\103\014\077\020\117\022\036" +
    "\023\074\030\141\032\130\033\101\037\120\044\132\045" +
    "\105\046\144\047\137\052\131\055\122\056\147\057\151" +
    "\060\150\061\121\062\142\063\124\064\116\065\110\066" +
    "\100\067\125\001\001\000\004\122\u0151\001\001\000\004" +
    "\040\u0152\001\001\000\002\001\001\000\004\025\u0154\001" +
    "\001\000\064\012\103\014\077\020\117\022\036\023\074" +
    "\030\141\032\130\033\101\037\120\044\132\045\105\046" +
    "\144\047\137\052\131\055\122\056\147\057\151\060\150" +
    "\061\121\062\142\063\124\064\116\065\110\066\100\067" +
    "\125\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\013\u0159\001\001\000\030\015\u015a\016\164\017\165\020" +
    "\173\021\157\030\161\032\130\033\101\050\162\051\174" +
    "\056\154\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\013\u015e\001\001" +
    "\000\002\001\001\000\034\015\233\016\164\017\165\020" +
    "\173\021\157\030\161\032\130\033\101\034\232\035\u0160" +
    "\050\162\051\174\056\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\014" +
    "\057\022\036\024\055\027\u0168\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\102\u016b\001\001\000\004\025" +
    "\u016c\001\001\000\064\012\103\014\077\020\117\022\036" +
    "\023\074\030\141\032\130\033\101\037\120\044\132\045" +
    "\105\046\144\047\137\052\131\055\122\056\147\057\151" +
    "\060\150\061\121\062\142\063\124\064\116\065\110\066" +
    "\100\067\125\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\073\u0170\001\001\000\002\001\001\000\006\014" +
    "\u0172\022\036\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$JojaphvizCup2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$JojaphvizCup2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$JojaphvizCup2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /**Metodo al que se llama automaticamente ante algun error sintáctico.*/
    public void syntax_error(Symbol s)
    {
        //String inTipo, String inMensaje, String inAmbito, String inFila, String inColumna
        MetodosTS.addError("Sintactico", "Error sintactico sin recuperacion (papalinas).", "ambito", String.valueOf(s.right+1), String.valueOf(s.left));
        System.out.println("Error sintactico en la Fila " + (s.right+1) +" Columna "+s.left+ ". Identificador \"" +s.value + "\" no reconocido." );
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    { 
        MetodosTS.addError("Sintactico", "Error sintactico sin recuperacion (papalinas).", "ambito", String.valueOf(s.right+1), String.valueOf(s.left));
        System.out.println("Error sintactico en la Fila " + (s.right+1)+ " Columna "+s.left+". Identificador \"" + s.value + "\" no reconocido."); 
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$JojaphvizCup2$actions {



    String claseActual="";
    String constructorPorOmision="";
    String contenidoInit="";
    boolean existeConstructor = false;


  private final JojaphvizCup2 parser;

  /** Constructor */
  CUP$JojaphvizCup2$actions(JojaphvizCup2 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$JojaphvizCup2$do_action(
    int                        CUP$JojaphvizCup2$act_num,
    java_cup.runtime.lr_parser CUP$JojaphvizCup2$parser,
    java.util.Stack            CUP$JojaphvizCup2$stack,
    int                        CUP$JojaphvizCup2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$JojaphvizCup2$result;

      /* select the action based on the action number */
      switch (CUP$JojaphvizCup2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // IMPRIMIR ::= timprimir tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("imprimir", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(52/*IMPRIMIR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // LIENZO ::= tlienzo tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("lienzo", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(51/*LIENZO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // POLIGONO ::= tpoligono tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("poligono", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(50/*POLIGONO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // OVALO ::= tovalo tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("ovalo", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(49/*OVALO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // RECTANGULO ::= trectangulo tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("rectangulo", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(48/*RECTANGULO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // ARCO ::= tarco tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("arco", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(47/*ARCO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // TEXTO ::= ttexto tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("texto", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(46/*TEXTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // LINEA ::= tlinea tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.funcionEspecial("linea", (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(45/*LINEA*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // OP_COMPARADOR ::= tdiferente 
            {
              Object RESULT = null;
		 RESULT = new String ("!="); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // OP_COMPARADOR ::= tigualigual 
            {
              Object RESULT = null;
		 RESULT = new String ("=="); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // OP_COMPARADOR ::= tmayorigual 
            {
              Object RESULT = null;
		 RESULT = new String (">="); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OP_COMPARADOR ::= tmenorigual 
            {
              Object RESULT = null;
		 RESULT = new String ("<="); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // OP_COMPARADOR ::= tmayor 
            {
              Object RESULT = null;
		 RESULT = new String (">"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // OP_COMPARADOR ::= tmenor 
            {
              Object RESULT = null;
		 RESULT = new String ("<"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(33/*OP_COMPARADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // CONDICION ::= EXPRESION OP_COMPARADOR EXPRESION 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 
                                                                                String[] str = MetodosTS.condicion((String[])e1, (String)op, (String[])e2);  
                                                                                RESULT = str;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(32/*CONDICION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // CONDICIONES ::= CONDICION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(31/*CONDICIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // CONDICIONES ::= tpa CONDICIONES tpc 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(31/*CONDICIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // CONDICIONES ::= tno CONDICIONES 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.condiciones((String[])e1, "not", null); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(31/*CONDICIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // CONDICIONES ::= CONDICIONES tand CONDICIONES 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.condiciones((String[])e1, "and", (String[])e2); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(31/*CONDICIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // CONDICIONES ::= CONDICIONES tor CONDICIONES 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.condiciones((String[])e1, "or", (String[])e2); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(31/*CONDICIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ELSE ::= 
            {
              Object RESULT = null;
		 String lb = MetodosTS.getNewEtiqueta(); 
                        String[] str = {lb + ":\n", lb ,""}; 
                    RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(30/*ELSE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // ELSE ::= telse tif tpa CONDICIONES tpc tla NT$17 INSTRUCCIONESLOW tlc NT$18 ELSE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$17
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
              // propagate RESULT from NT$18
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int elleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int elright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object el = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		
                    String[] str = MetodosTS.sentenciaIf((String[])co, (String[])in, (String[])el);
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(30/*ELSE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-10)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // NT$18 ::= 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 
                    MetodosTS.SimboloActual.pop(); 
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(80/*NT$18*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // NT$17 ::= 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
 MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));  
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(79/*NT$17*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ELSE ::= telse tla NT$16 INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$16
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 
                    MetodosTS.SimboloActual.pop(); //zxxczc
                    String[] str = MetodosTS.sentenciaElse((String[])in);
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(30/*ELSE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // NT$16 ::= 
            {
              Object RESULT = null;
 MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek())); //asdzxc 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(78/*NT$16*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // IF ::= tif tpa CONDICIONES tpc tla NT$14 INSTRUCCIONESLOW tlc NT$15 ELSE 
            {
              Object RESULT = null;
              // propagate RESULT from NT$14
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
              // propagate RESULT from NT$15
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int elleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int elright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object el = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		
                    String[] str = MetodosTS.sentenciaIf((String[])co, (String[])in, (String[])el);
                    String cod = str[0];
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(29/*IF*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // NT$15 ::= 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 
                    MetodosTS.SimboloActual.pop(); 
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(77/*NT$15*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // NT$14 ::= 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek())); 
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(76/*NT$14*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // DEFAULT ::= 
            {
              Object RESULT = null;
		 String[] str = {"","",""}; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(42/*DEFAULT*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // DEFAULT ::= tdefault tdospuntos NT$13 INSTRUCCIONESLOW tenter 
            {
              Object RESULT = null;
              // propagate RESULT from NT$13
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 
                    MetodosTS.SimboloActual.pop(); 
                    RESULT = in;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(42/*DEFAULT*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // NT$13 ::= 
            {
              Object RESULT = null;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(75/*NT$13*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // CASES ::= tpa VARIABLE tpc tla tenter tcase EXPRESION tdospuntos NT$12 INSTRUCCIONESLOW 
            {
              Object RESULT = null;
              // propagate RESULT from NT$12
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 
                    MetodosTS.SimboloActual.pop(); 
                    String[] str = MetodosTS.sentenciaCase((String[])va, (String[])ex,(String[])in);
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(41/*CASES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // NT$12 ::= 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    MetodosTS.setNewBreak();
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(74/*NT$12*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // CASES ::= CASES tcase EXPRESION tdospuntos NT$11 INSTRUCCIONESLOW 
            {
              Object RESULT = null;
              // propagate RESULT from NT$11
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int caleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int caright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object ca = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 
                    MetodosTS.SimboloActual.pop(); 
                    String[] str = MetodosTS.sentenciaCase((String[])ca, (String[])ex,(String[])in);
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(41/*CASES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // NT$11 ::= 
            {
              Object RESULT = null;
		int caleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int caright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object ca = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(73/*NT$11*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // SWITCH ::= tswitch CASES DEFAULT tlc 
            {
              Object RESULT = null;
		int caleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int caright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object ca = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int deleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int deright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object de = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		  
                                                                                String[] str = MetodosTS.sentenciaSwitch((String[])ca, (String[])de);
                                                                                MetodosTS.popBreak();
                                                                                RESULT = str;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(40/*SWITCH*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // DOWHILE ::= tdo tla NT$9 INSTRUCCIONESLOW tlc NT$10 twhile tpa CONDICIONES tpc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$9
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
              // propagate RESULT from NT$10
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		
                    
                    String[] str = MetodosTS.sentenciaDoWhile((String[])in, (String[])co);
                    MetodosTS.popBreak();
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(37/*DOWHILE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // NT$10 ::= 
            {
              Object RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 MetodosTS.SimboloActual.pop(); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(72/*NT$10*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // NT$9 ::= 
            {
              Object RESULT = null;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    MetodosTS.setNewBreak();
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(71/*NT$9*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // WHILE ::= twhile tpa CONDICIONES tpc tla NT$8 INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$8
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 MetodosTS.SimboloActual.pop(); 
                    String[] str = MetodosTS.sentenciaWhile((String[])co, (String[])in);
                    MetodosTS.popBreak();
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(36/*WHILE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // NT$8 ::= 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    MetodosTS.setNewBreak();
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(70/*NT$8*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // FOR ::= tfor tpa TIPO tiden tigual EXPRESION tcoma CONDICIONES tcoma ASIGNACION tpc tla NT$7 INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-11)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-11)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-11)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int asleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int asright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object as = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 
                    MetodosTS.SimboloActual.pop();
                    String[] asig = MetodosTS.declaradorVar((String)id, (String[])ex, null);
                    String[] str = MetodosTS.sentenciaFor(asig, (String[])co, (String[])in, (String[])as);
                    MetodosTS.popBreak();
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(35/*FOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-14)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // NT$7 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int asleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int asright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object as = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    MetodosTS.setNewBreak();
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(69/*NT$7*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // FOR ::= tfor tpa ASIGNACION tcoma CONDICIONES tcoma ASIGNACION tpc tla NT$6 INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int as1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left;
		int as1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).right;
		Object as1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int as2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int as2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object as2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 MetodosTS.SimboloActual.pop(); 
                    String[] str = MetodosTS.sentenciaFor((String[])as1, (String[])co, (String[])in, (String[])as2);
                    MetodosTS.popBreak();
                    RESULT = str;
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(35/*FOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-11)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // NT$6 ::= 
            {
              Object RESULT = null;
		int as1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left;
		int as1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).right;
		Object as1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).value;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int as2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int as2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object as2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
 
                    MetodosTS.SimboloActual.push(MetodosTS.getSiguienteAmbito(MetodosTS.SimboloActual.peek()));
                    MetodosTS.setNewBreak();
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(68/*NT$6*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VECTOR2 ::= tiden tca EXPRESION tcc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.getVector2((String)id, (String[])ex, null); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(60/*VECTOR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VECTOR2 ::= VECTOR2 tca EXPRESION tcc 
            {
              Object RESULT = null;
		int veleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int veright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object ve = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.getVector2(null, (String[])ex, (String[])ve); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(60/*VECTOR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // VECTOR ::= tiden tca EXPRESION tcc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.getVector((String)id, (String[])ex, null); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(24/*VECTOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VECTOR ::= VECTOR tca EXPRESION tcc 
            {
              Object RESULT = null;
		int veleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int veright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object ve = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.getVector(null, (String[])ex, (String[])ve); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(24/*VECTOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // LISTA_ARGUMENTOS2 ::= EXPRESION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 ArrayList<String[]> lista = new ArrayList<>(); String[] str = (String[])e; lista.add(str); RESULT = lista; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(26/*LISTA_ARGUMENTOS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // LISTA_ARGUMENTOS2 ::= LISTA_ARGUMENTOS2 tcoma EXPRESION 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 ArrayList<String[]> lista = (ArrayList<String[]>)li; String[] str = (String[])ex; lista.add(str); RESULT = lista; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(26/*LISTA_ARGUMENTOS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // LISTA_ARGUMENTOS ::= 
            {
              Object RESULT = null;
		 ArrayList<String[]> lista = new ArrayList<>(); RESULT = lista;
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(27/*LISTA_ARGUMENTOS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // LISTA_ARGUMENTOS ::= LISTA_ARGUMENTOS2 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(27/*LISTA_ARGUMENTOS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // CASTEO ::= tpa TIPO_PRIMI tpc EXPRESION 
            {
              Object RESULT = null;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.casteo((String)ti, (String[])ex); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(15/*CASTEO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // FUNCION2 ::= tiden tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.sentenciaFuncion2(claseActual, (String)id, (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(61/*FUNCION2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // FUNCION ::= tiden tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.sentenciaFuncion(claseActual, (String)id, (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(25/*FUNCION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // VARIABLE2 ::= tiden 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.variable2((String)e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(58/*VARIABLE2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // VARIABLE2 ::= FUNCION2 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(58/*VARIABLE2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // VARIABLE2 ::= VECTOR2 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(58/*VARIABLE2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // VARIABLE2 ::= tiden NT$5 ATRIBUTO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int atleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int atright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object at = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.objetoAtributo((String)id, (String[])at); 
                                                                                MetodosTS.SimboloActual.pop();
                                                                                RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(58/*VARIABLE2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // NT$5 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
 MetodosTS.setObjetoAsAmbito((String)id); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(67/*NT$5*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // ATRIBUTO ::= tpunto VARIABLE2 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(23/*ATRIBUTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // VARIABLE ::= tiden 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.variable((String)e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(22/*VARIABLE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // VARIABLE ::= FUNCION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(22/*VARIABLE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // VARIABLE ::= VECTOR 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(22/*VARIABLE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // VARIABLE ::= tiden NT$4 ATRIBUTO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int atleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int atright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object at = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		
                                                                                String[] str = MetodosTS.objetoAtributo((String)id, (String[])at);
                                                                                MetodosTS.SimboloActual.pop();
                                                                                RESULT = str;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(22/*VARIABLE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // NT$4 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
 MetodosTS.setObjetoAsAmbito((String)id); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(66/*NT$4*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // VARIABLE ::= tthis NT$3 ATRIBUTO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int atleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int atright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object at = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 
                                                                                String[] str = MetodosTS.objetoAtributo((String)id, (String[])at);
                                                                                MetodosTS.SimboloActual.pop();
                                                                                RESULT = str;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(22/*VARIABLE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // NT$3 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
 MetodosTS.setAmbitoPadre(); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(65/*NT$3*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // NEW_OBJETO ::= tnew tiden tpa LISTA_ARGUMENTOS tpc 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.newObjeto((String)id, (ArrayList<String[]>)li); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(39/*NEW_OBJETO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ARGUMENTOS_ARRAY ::= EXPRESION 
            {
              Object RESULT = null;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.argumentosArray((String[])ex, null); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(59/*ARGUMENTOS_ARRAY*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ARGUMENTOS_ARRAY ::= ARGUMENTOS_ARRAY tcoma EXPRESION 
            {
              Object RESULT = null;
		int aaleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int aaright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object aa = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.argumentosArray((String[])ex, (String[])aa); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(59/*ARGUMENTOS_ARRAY*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // NEW_ARRAY ::= tnew tarray tpa ARGUMENTOS_ARRAY tpc 
            {
              Object RESULT = null;
		int aaleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int aaright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object aa = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.newArray((String[])aa); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(38/*NEW_ARRAY*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // NUM ::= OP_TERNARIO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // NUM ::= NEW_OBJETO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // NUM ::= NEW_ARRAY 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // NUM ::= INCREMENTO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // NUM ::= CASTEO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // NUM ::= VARIABLE 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.getValorVariable((String[])e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // NUM ::= tfalse 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = {"", "0", "boolean" }; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NUM ::= ttrue 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = {"", "1", "boolean" }; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // NUM ::= tcaracter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.charToC3d((String)e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NUM ::= tcadena 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.stringToC3d((String)e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // NUM ::= tdecimal 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = {"", (String)e, "float" }; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // NUM ::= tentero 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = {"", (String)e, "int" }; RESULT = str;  
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(13/*NUM*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // EXPR ::= NUM 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // EXPR ::= tpa EXPR tpc 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // EXPR ::= EXPR tpotencia EXPR 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.exprOpExpr((String[])e1, "^",(String[])e2); RESULT = str;  
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // EXPR ::= EXPR tdividir EXPR 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.exprDividirExpr((String[])e1,(String[])e2); RESULT = str;  
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EXPR ::= EXPR tpor EXPR 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.exprOpExpr((String[])e1, "*",(String[])e2); RESULT = str;  
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EXPR ::= EXPR tmenos EXPR 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.exprOpExpr((String[])e1, "-",(String[])e2); RESULT = str;   
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // EXPR ::= EXPR tmas EXPR 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.exprSumaExpr((String[])e1, (String[])e2); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(12/*EXPR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // EXPRESION ::= EXPR 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(11/*EXPRESION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // TIPO_PRIMI ::= tvoid 
            {
              Object RESULT = null;
		 RESULT = new String("void"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(16/*TIPO_PRIMI*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // TIPO_PRIMI ::= tfloat 
            {
              Object RESULT = null;
		 RESULT = new String("float"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(16/*TIPO_PRIMI*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // TIPO_PRIMI ::= tchar 
            {
              Object RESULT = null;
		 RESULT = new String("char"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(16/*TIPO_PRIMI*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // TIPO_PRIMI ::= tbool 
            {
              Object RESULT = null;
		 RESULT = new String("boolean"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(16/*TIPO_PRIMI*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // TIPO_PRIMI ::= tint 
            {
              Object RESULT = null;
		 RESULT = new String("int"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(16/*TIPO_PRIMI*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // TIPO ::= tarray tmenor TIPO tmayor 
            {
              Object RESULT = null;
		int tpleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int tpright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object tp = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = new String("array"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(10/*TIPO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // TIPO ::= tstring 
            {
              Object RESULT = null;
		 RESULT = new String("string"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(10/*TIPO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // TIPO ::= tiden 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(10/*TIPO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // TIPO ::= TIPO_PRIMI 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(10/*TIPO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // OP_TERNARIO ::= tpa CONDICIONES tpc tinterrogacion EXPRESION tdospuntos EXPRESION 
            {
              Object RESULT = null;
		int coleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int coright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object co = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.opTernario((String[])co, (String[])e1, (String[])e2); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(44/*OP_TERNARIO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INCREMENTO ::= tmenosmenos VARIABLE 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(14/*INCREMENTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INCREMENTO ::= tmasmas VARIABLE 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(14/*INCREMENTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // INCREMENTO ::= VARIABLE tmenosmenos 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.incremento((String[])va, "-"); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(14/*INCREMENTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // INCREMENTO ::= VARIABLE tmasmas 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = MetodosTS.incremento((String[])va, "+"); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(14/*INCREMENTO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ASIGNACION ::= OP_TERNARIO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ASIGNACION ::= INCREMENTO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ASIGNACION ::= VARIABLE tdividirigual EXPRESION 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ASIGNACION ::= VARIABLE tporigual EXPRESION 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ASIGNACION ::= VARIABLE tmenosigual EXPRESION 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ASIGNACION ::= VARIABLE tmasigual EXPRESION 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ASIGNACION ::= VARIABLE tigual EXPRESION 
            {
              Object RESULT = null;
		int valeft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.asignacion((String[])va, (String[])ex); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(34/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // INSTRUCCIONLOW ::= tenter 
            {
              Object RESULT = null;
		 String[] str = {"","",""}; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // INSTRUCCIONLOW ::= tcontinue tenter 
            {
              Object RESULT = null;
		 String[] str = {"","",""}; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // INSTRUCCIONLOW ::= tbreak tenter 
            {
              Object RESULT = null;
		 String[] str = MetodosTS.sentenciaBreak(); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // INSTRUCCIONLOW ::= DOWHILE 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // INSTRUCCIONLOW ::= SWITCH 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INSTRUCCIONLOW ::= WHILE 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INSTRUCCIONLOW ::= FOR 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INSTRUCCIONLOW ::= IF 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INSTRUCCIONLOW ::= RETURN tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INSTRUCCIONLOW ::= IMPRIMIR tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INSTRUCCIONLOW ::= LIENZO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INSTRUCCIONLOW ::= POLIGONO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INSTRUCCIONLOW ::= OVALO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INSTRUCCIONLOW ::= RECTANGULO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INSTRUCCIONLOW ::= ARCO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INSTRUCCIONLOW ::= TEXTO tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INSTRUCCIONLOW ::= LINEA tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INSTRUCCIONLOW ::= VARIABLE tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INSTRUCCIONLOW ::= ASIGNACION tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INSTRUCCIONLOW ::= DECLARA_VAR_LOCAL tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(53/*INSTRUCCIONLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INSTRUCCIONESLOW ::= tenter 
            {
              Object RESULT = null;
		 String[] str = {"","",""}; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(19/*INSTRUCCIONESLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INSTRUCCIONESLOW ::= INSTRUCCIONESLOW INSTRUCCIONLOW 
            {
              Object RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.instruccioneslow((String[])in, (String[])e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(19/*INSTRUCCIONESLOW*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // LISTA_PARAMETROS2 ::= tamp TIPO tiden 
            {
              Object RESULT = null;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = new String("_" + (String)ti); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(18/*LISTA_PARAMETROS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // LISTA_PARAMETROS2 ::= TIPO tiden 
            {
              Object RESULT = null;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = new String("_" + (String)ti); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(18/*LISTA_PARAMETROS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // LISTA_PARAMETROS2 ::= LISTA_PARAMETROS2 tcoma tamp TIPO tiden 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String str = (String)li; RESULT = new String(str + "_" + (String)ti); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(18/*LISTA_PARAMETROS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // LISTA_PARAMETROS2 ::= LISTA_PARAMETROS2 tcoma TIPO tiden 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String str = (String)li; RESULT = new String(str + "_" + (String)ti); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(18/*LISTA_PARAMETROS2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // LISTA_PARAMETROS ::= 
            {
              Object RESULT = null;
		 RESULT = new String(""); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(21/*LISTA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // LISTA_PARAMETROS ::= LISTA_PARAMETROS2 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = li; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(21/*LISTA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // RETURN ::= treturn EXPRESION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.sentenciaReturn((String[])e); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(43/*RETURN*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // DECLARA_CONSTRUCTOR ::= MODIFICADOR tiden tpa LISTA_PARAMETROS tpc tla NT$2 INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		
                                                                                String nombreFuncion = claseActual + "_" + (String)id + (String)li; 
                                                                                String str = MetodosTS.crearConstructor(claseActual, nombreFuncion, (String[])in);
                                                                                MetodosTS.SimboloActual.pop();
                                                                                MetodosTS.popReturn();
                                                                                RESULT = str;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(55/*DECLARA_CONSTRUCTOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$2 ::= 
            {
              Object RESULT = null;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;

                                                                                String nombreFuncion = claseActual + "_" + (String)id + (String)li; 
                                                                                MetodosTS.setAmbito(nombreFuncion);
                                                                                MetodosTS.setNewReturn();
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(64/*NT$2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DECLARA_METODO ::= MODIFICADOR TIPO tiden tpa LISTA_PARAMETROS tpc NT$1 tla INSTRUCCIONESLOW tlc 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).value;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int inleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object in = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 
                                                                                MetodosTS.SimboloActual.pop();
                                                                                String nombreFuncion = claseActual + "_" + (String)id + (String)li;
                                                                                String metodo = MetodosTS.declaraMetodo(nombreFuncion, (String[])in);
                                                                                MetodosTS.popReturn();
                                                                                RESULT = metodo;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(20/*DECLARA_METODO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-9)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$1 ::= 
            {
              Object RESULT = null;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
 
                                                                                String nombreFuncion = claseActual + "_" + (String)id + (String)li; 
                                                                                MetodosTS.setAmbito(nombreFuncion);
                                                                                MetodosTS.setNewReturn();
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(63/*NT$1*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // INICIA_VAR ::= 
            {
              Object RESULT = null;
		 RESULT = null; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(9/*INICIA_VAR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // INICIA_VAR ::= tigual EXPRESION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(9/*INICIA_VAR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // DECLARADOR_VAR ::= TIPO tiden INICIA_VAR 
            {
              Object RESULT = null;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.declaradorVar((String)id, (String[])e, (String)ti); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(8/*DECLARADOR_VAR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DECLARADOR_VAR ::= DECLARADOR_VAR tcoma tiden INICIA_VAR 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str1 = (String[])li; String[] str2 = MetodosTS.declaradorVar((String)id, (String[])e, null); str1[0] = str1[0] + str2[0]; RESULT = str1; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(8/*DECLARADOR_VAR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DECLARA_VAR_LOCAL ::= DECLARADOR_VAR 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = (String[])li; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(17/*DECLARA_VAR_LOCAL*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // INICIA_VAR2 ::= 
            {
              Object RESULT = null;
		 RESULT = null; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(57/*INICIA_VAR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // INICIA_VAR2 ::= tigual EXPRESION 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = e; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(57/*INICIA_VAR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DECLARADOR_VAR2 ::= TIPO tiden INICIA_VAR2 
            {
              Object RESULT = null;
		int tileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int tiright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object ti = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = MetodosTS.declaradorVar((String)id, (String[])e, (String)ti); RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(56/*DECLARADOR_VAR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // DECLARADOR_VAR2 ::= DECLARADOR_VAR2 tcoma tiden INICIA_VAR2 
            {
              Object RESULT = null;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str1 = (String[])li; String[] str2 = MetodosTS.declaradorVar((String)id, (String[])e, null); str1[0] = str1[0] + str2[0]; RESULT = str1; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(56/*DECLARADOR_VAR2*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-3)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DECLARA_VAR ::= MODIFICADOR DECLARADOR_VAR2 
            {
              Object RESULT = null;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object li = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String[] str = (String[])li; RESULT = str; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(7/*DECLARA_VAR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // INSTRUCCIONES ::= tenter 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(5/*INSTRUCCIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // INSTRUCCIONES ::= INSTRUCCIONES tenter 
            {
              Object RESULT = null;
		 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(5/*INSTRUCCIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // INSTRUCCIONES ::= INSTRUCCIONES DECLARA_CONSTRUCTOR 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 existeConstructor = true; MetodosTS.addTexto3d((String)e); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(5/*INSTRUCCIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // INSTRUCCIONES ::= INSTRUCCIONES DECLARA_METODO 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 String str = (String)e; MetodosTS.addTexto3d(str); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(5/*INSTRUCCIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // INSTRUCCIONES ::= INSTRUCCIONES DECLARA_VAR tenter 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		 String[] str = (String[])e; contenidoInit = contenidoInit + str[0]; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(5/*INSTRUCCIONES*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // MODIFICADOR ::= 
            {
              Object RESULT = null;
		 RESULT = new String("private"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(6/*MODIFICADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // MODIFICADOR ::= tprivate 
            {
              Object RESULT = null;
		 RESULT = new String("private"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(6/*MODIFICADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // MODIFICADOR ::= tpublic 
            {
              Object RESULT = null;
		 RESULT = new String("public"); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(6/*MODIFICADOR*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // EXTENDS ::= 
            {
              Object RESULT = null;
		 RESULT = null; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(28/*EXTENDS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // EXTENDS ::= textends tiden 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 MetodosTS.heredar2((String)id); 
                                                                                String extendsInit = MetodosTS.InitsDeExtends.get((String)id);
                                                                                contenidoInit = contenidoInit + extendsInit;
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(28/*EXTENDS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ENTERS ::= 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(54/*ENTERS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ENTERS ::= ENTERS tenter 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(54/*ENTERS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // DECLARA_CLASE ::= MODIFICADOR tclass tiden NT$0 EXTENDS tla INSTRUCCIONES tlc ENTERS 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-5)).value;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-6)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		 
                        String str = MetodosTS.crearInit((String)id, contenidoInit, existeConstructor);
                        MetodosTS.InitsDeExtends.put((String)id, contenidoInit);
                        MetodosTS.addTexto3d(str);
                        RESULT = id; 
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(4/*DECLARA_CLASE*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-8)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$0 ::= 
            {
              Object RESULT = null;
		int moleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int moright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object mo = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
 
                        claseActual = (String)id; 
                    
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(62/*NT$0*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // IMPORTS ::= 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(3/*IMPORTS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // IMPORTS ::= IMPORTS tenter 
            {
              Object RESULT = null;

              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(3/*IMPORTS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // IMPORTS ::= IMPORTS timport tmenor tiden tpunto tiden tmayor tenter 
            {
              Object RESULT = null;
		int id1left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-4)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-2)).value;
		 MetodosTS.importar2((String)id1, (String)id2); 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(3/*IMPORTS*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-7)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // CUERPO ::= IMPORTS DECLARA_CLASE 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 RESULT = id; 
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CUERPO 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).value;
		 
                                                                                System.out.println("Fin " +(String)id);  
                                                                                System.out.println(MetodosTS.SimboloActual.toString());
                                                                                
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          return CUP$JojaphvizCup2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).value;
		RESULT = start_val;
              CUP$JojaphvizCup2$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-1)).left, ((java_cup.runtime.Symbol)CUP$JojaphvizCup2$stack.elementAt(CUP$JojaphvizCup2$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$JojaphvizCup2$parser.done_parsing();
          return CUP$JojaphvizCup2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

